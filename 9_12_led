 if(strcmp(topic, "infind/GRUPO12/led/cmd")==0) 
  {
    StaticJsonDocument<32> root; // el tamaño del buffer tiene que ser el adecuado
    // Deserialize the JSON document
    DeserializationError error = deserializeJson(root, mensaje,length);

    // Compruebo si no hubo error
    if (error) {
      Serial.print("Error deserializeJson() failed: ");   // Si devuelve un OK no ha habido error.
      Serial.println(error.c_str());
    }
    
    else
      if(root.containsKey("level"))  // comprobar si existe el campo/clave que estamos buscando
      { 
        valor_led = root["level"];    // Lo que hay en el campo "level" del payload se guarda en la variable "valor_led".
        Serial.print("Mensaje OK, nivel de intensidad = ");
        Serial.println(valor_led); // LO QUE RECIBIMOS DEL SLIDER
        int intensidad=valor_anterior; // variable auxiliar que usamos para aumentar la intensidad cada 10ms

        while (intensidad!=valor_led)
        {

            if (millis()-ultimo >= 10) // cambiar el 10 por mqtt!!!!!!!!!
            {
              ultimo = millis();    
              if (intensidad<valor_led)
              {
                intensidad++;
              }
              else if (intensidad>valor_led)
              {
                intensidad--;
              }
            }         
              int PWM = 255 - intensidad*(255/100);    // Pasamos de escala 100-0 a 0-255.
              
                                                      // A 255 le restamos "valor_led*(255/100)" para darle la vuelta a la escala.
                                                      // Es así porque el LED está encendido a nivel lógico bajo (0) y se apaga a nivel lógico alto (1).
              if(boton)
              {
                int PWM=intensidad*255/100;
              }
              analogWrite(LED2,PWM);    // Escribimos en el LED2 el valor de PWM.
        }
        // Cuando cambie el valor de la intensidad del led, enviamos un mensaje.
        if(valor_led != valor_anterior)
        {
          // Información del LED
          snprintf (msg, MSG_BUFFER_SIZE, "{\"LED\": %d}", valor_led);
          Serial.print("Mensaje de confirmación de intensidad: ");
          Serial.println(msg);
          client.publish("infind/GRUPO12/led/status", msg);

          valor_anterior = valor_led;
        }
