[
    {
        "id": "7bd5dc5320754ff6",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dfefd42be31cab40",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "759329fc13f505d4",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "153eebdcb599e117",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "Century Gothic,CenturyGothic,AppleGothic,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#33a6cc",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#b0ffb0",
                "baseFont": "Verdana,Verdana,Geneva,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "Century Gothic,CenturyGothic,AppleGothic,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "427deeed4a6fc641",
        "type": "ui_group",
        "name": "Primera sesi√≥n",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "086e4a74c726bc8e",
        "type": "ui_group",
        "name": "Leds",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "dc59ca9569b31ea4",
        "type": "ui_group",
        "name": "Leds",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0c4636488d36c150",
        "type": "ui_group",
        "name": "Leds",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d4f47a436fa19936",
        "type": "ui_group",
        "name": "Sensores",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5cd297ddfdcd04be",
        "type": "ui_group",
        "name": "ControlLeds",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d1bd5f5047fbe178",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b4eb3d3dca556878",
        "type": "ui_group",
        "name": "SENSORS DATA",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e18675c0e8491a0e",
        "type": "ui_group",
        "name": "CONTROL LEDS",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8a70b2265bdc7564",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "a3d889f921143d83",
        "type": "ui_group",
        "name": "Sensores",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c2a5a2bc3a268e8a",
        "type": "ui_group",
        "name": "Control Led",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "63141e0bc7f5efaa",
        "type": "ui_group",
        "name": "Temperaturas",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "06e76b933a80250c",
        "type": "ui_group",
        "name": "JSON",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "76cdf73b610a4b0e",
        "type": "ui_group",
        "name": "Prueba clase",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5696db282a62f6b6",
        "type": "ui_group",
        "name": "JSON",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fa1f67c2768074bf",
        "type": "ui_group",
        "name": "Conexiones",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7b6f6c6dda73bde9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "3bcdf62cce52fdc5",
        "type": "ui_group",
        "name": "Sensores",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f15713f936b29d1f",
        "type": "ui_group",
        "name": "RSSI",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e0f0a34153bbe2bd",
        "type": "ui_group",
        "name": "Tiempos",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9adf1ed21b9bd616",
        "type": "ui_group",
        "name": "Charts",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "46ca52df871df34d",
        "type": "ui_group",
        "name": "Donuts",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "819581010d48bfd0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f605fa69.8f5008",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "connectOptions": "",
        "port": "27017",
        "db": "ejercicio",
        "name": ""
    },
    {
        "id": "45a7d5cc.b3cb3c",
        "type": "ui_group",
        "name": "Registros",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "eae61757.7a1bf8",
        "type": "ui_group",
        "name": "Ejemplo",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "de6fadbd64c80106",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "77f185cca62f1bc9",
        "type": "ui_group",
        "name": "Sensores",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fe10f8a8891c7f4d",
        "type": "ui_group",
        "name": "sensores",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "25e9a54a37e4b9f0",
        "type": "ui_group",
        "name": "Control Leds",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cc9d983029d50f09",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f044db6a7bdb0105",
        "type": "ui_group",
        "name": "Temperatura",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3363685c5d157dd0",
        "type": "ui_group",
        "name": "LEDs",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9a03cb27515e4c92",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "f5c7b05eba2f48dc",
        "type": "ui_group",
        "name": "Otras medidas",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2a56ed26b7d64bbe",
        "type": "ui_group",
        "name": "Conexi√≥n",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b91cc49b32457401",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ca85f604d5693fc3",
        "type": "ui_group",
        "name": "Temperatura",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "769c2b9d43586d43",
        "type": "ui_group",
        "name": "Sensores",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "177584986659d368",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c445b29dfa0e36cb",
        "type": "ui_group",
        "name": "Humedad",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b09a2579a0feff28",
        "type": "ui_group",
        "name": "Presion",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e5a11b6f5ea78a4f",
        "type": "ui_group",
        "name": "Temperatura media",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "75ed35688252297a",
        "type": "ui_group",
        "name": "JSON",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e5a8e4cdf5d62546",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "1fe49b88ee685be8",
        "type": "ui_group",
        "name": "Gauge",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0312359caef9d9df",
        "type": "ui_group",
        "name": "Chart",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3697e5fd11b20f8e",
        "type": "ui_group",
        "name": "Control",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cb0fd1bb20aa6454",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "854a4ce8f3ed5209",
        "type": "ui_group",
        "name": "JSON",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "41ce2fc2798c901c",
        "type": "ui_group",
        "name": "Conexion",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c50fa4300faa74f7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "3ab2e5e9fbd2455c",
        "type": "ui_group",
        "name": "Primera sesi√≥n",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bcd2bdea056631bd",
        "type": "ui_group",
        "name": "Leds",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "75c697a19c3b9641",
        "type": "ui_group",
        "name": "Leds",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8544a70ed56e3153",
        "type": "ui_group",
        "name": "Leds",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "06746fead446538a",
        "type": "ui_group",
        "name": "Sensores",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d8499e8c7f045530",
        "type": "ui_group",
        "name": "ControlLeds",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ff6b454bc6ca15bf",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "35e93d77580ef962",
        "type": "ui_group",
        "name": "SENSORS DATA",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c734ca9ddee0e4b9",
        "type": "ui_group",
        "name": "CONTROL LEDS",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "98ae3e363bdda708",
        "type": "ui_group",
        "name": "JSON",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6bd60ae60b37b1f7",
        "type": "ui_group",
        "name": "Prueba clase",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "05f6b44918d0f624",
        "type": "ui_group",
        "name": "JSON",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c5298e28f6f51f00",
        "type": "ui_group",
        "name": "Conexiones",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8ea93e291c686783",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "eaa90b4f6641ddd9",
        "type": "ui_group",
        "name": "Sensores",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a7eec556bef21d9f",
        "type": "ui_group",
        "name": "RSSI",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "87f8d9d8219ef804",
        "type": "ui_group",
        "name": "Tiempos",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7667aa8848fe4396",
        "type": "ui_group",
        "name": "Charts",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "11f100b3d3f3ca36",
        "type": "ui_group",
        "name": "Donuts",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "27e3d8a86be8ae30",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "d561ba01de2c3543",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "connectOptions": "",
        "port": "27017",
        "db": "ejercicio",
        "name": ""
    },
    {
        "id": "3615a1ca1b2afad1",
        "type": "ui_group",
        "name": "Registros",
        "tab": "e6482110f206b66e",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false
    },
    {
        "id": "e6482110f206b66e",
        "type": "ui_tab",
        "name": "Ejemplo Mongo",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6ef25bb622bc305e",
        "type": "ui_group",
        "name": "Ejemplo",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7248e158bc5e1353",
        "type": "ui_group",
        "name": "Cantidad de datos",
        "tab": "e6482110f206b66e",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "df7ffb88971cb0d2",
        "type": "ui_group",
        "name": "Filtro Temp",
        "tab": "e6482110f206b66e",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a7c3c7e1025d343b",
        "type": "ui_group",
        "name": "10 √∫ltimos",
        "tab": "e6482110f206b66e",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bc20b86a34bc490b",
        "type": "ui_group",
        "name": "5 √∫ltimos min",
        "tab": "e6482110f206b66e",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b276f50334e45f5e",
        "type": "ui_group",
        "name": "5-15 min",
        "tab": "e6482110f206b66e",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c101b3c00cff557d",
        "type": "mqtt in",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "topic": "iot/datos/json",
        "qos": "2",
        "datatype": "auto",
        "broker": "27e3d8a86be8ae30",
        "nl": false,
        "rap": false,
        "x": 103.01422119140625,
        "y": 120.00566482543945,
        "wires": [
            [
                "b4f854d058959c4d"
            ]
        ]
    },
    {
        "id": "b4f854d058959c4d",
        "type": "json",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 361.8476371765137,
        "y": 121.33899116516113,
        "wires": [
            [
                "f54632ec595b2292"
            ]
        ]
    },
    {
        "id": "cd16d4e1cc11c77b",
        "type": "debug",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 770,
        "y": 60,
        "wires": []
    },
    {
        "id": "79f8d2e35a111b46",
        "type": "mongodb out",
        "z": "7bd5dc5320754ff6",
        "mongodb": "d561ba01de2c3543",
        "name": "",
        "collection": "datos_json",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 789.7869186401367,
        "y": 130.77268409729004,
        "wires": []
    },
    {
        "id": "80c7ab17e4cc51db",
        "type": "mongodb in",
        "z": "7bd5dc5320754ff6",
        "mongodb": "d561ba01de2c3543",
        "name": "",
        "collection": "datos_json",
        "operation": "find",
        "x": 870,
        "y": 400,
        "wires": [
            [
                "36f9f6689039e5b5"
            ]
        ]
    },
    {
        "id": "dbc56eca0329d3ba",
        "type": "inject",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "x": 430,
        "y": 480,
        "wires": [
            [
                "db74e7dfecf3e92a"
            ]
        ]
    },
    {
        "id": "fc2550f8ad3b0a6a",
        "type": "inject",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "x": 510,
        "y": 2000,
        "wires": [
            [
                "d2e21397c9dd93e9"
            ]
        ]
    },
    {
        "id": "d2e21397c9dd93e9",
        "type": "mongodb out",
        "z": "7bd5dc5320754ff6",
        "mongodb": "d561ba01de2c3543",
        "name": "",
        "collection": "datos_json",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 849.2158813476562,
        "y": 2004.3892679214478,
        "wires": []
    },
    {
        "id": "89bfdb11949da30e",
        "type": "comment",
        "z": "7bd5dc5320754ff6",
        "name": "borrar una coleccion",
        "info": "inyectar un JSON vac√≠o: {}\nseleccionar \"remove\" en la configuraci√≥n del nodo mongoDB ",
        "x": 450,
        "y": 1940,
        "wires": []
    },
    {
        "id": "420dfb2d73632955",
        "type": "comment",
        "z": "7bd5dc5320754ff6",
        "name": "intruducir ultimo dato",
        "info": "",
        "x": 420,
        "y": 440,
        "wires": []
    },
    {
        "id": "a4de70bbf99d7135",
        "type": "comment",
        "z": "7bd5dc5320754ff6",
        "name": "insertar datos en una coleccion",
        "info": "s√≥lo el payload\nantes le a√±adimos la fecha",
        "x": 174.0142059326172,
        "y": 70.00568389892578,
        "wires": []
    },
    {
        "id": "36f9f6689039e5b5",
        "type": "template",
        "z": "7bd5dc5320754ff6",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Registros: </h1>\n <ul>\n{{#payload}}\n  <li>{{date}} : {{BME280.Temperatura }}¬∫C, {{BME280.Humedad}}% </li>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 1224.2158660888672,
        "y": 515.3892774581909,
        "wires": [
            [
                "7a908fd6444c3701"
            ]
        ]
    },
    {
        "id": "7a908fd6444c3701",
        "type": "ui_template",
        "z": "7bd5dc5320754ff6",
        "group": "3615a1ca1b2afad1",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "4",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1424.2158660888672,
        "y": 515.3892774581909,
        "wires": [
            []
        ]
    },
    {
        "id": "f54632ec595b2292",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "+ fecha",
        "func": "msg.payload.date = new Date();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 552.7000064849854,
        "y": 131.00000286102295,
        "wires": [
            [
                "79f8d2e35a111b46",
                "cd16d4e1cc11c77b",
                "8399b9af8fbe6b2f"
            ]
        ]
    },
    {
        "id": "8399b9af8fbe6b2f",
        "type": "change",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 280,
        "wires": [
            [
                "db74e7dfecf3e92a",
                "0b73b77d5cb52323"
            ]
        ]
    },
    {
        "id": "867f5350e25d0494",
        "type": "mongodb in",
        "z": "7bd5dc5320754ff6",
        "mongodb": "d561ba01de2c3543",
        "name": "",
        "collection": "datos_json",
        "operation": "find",
        "x": 1230,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "9164b06e27365bcd",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "func": "msg.payload = \"payload.BME280\"\nmsg.limit = 1;\nmsg.sort = {\"date\" : -1};\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 160,
        "wires": [
            [
                "867f5350e25d0494"
            ]
        ]
    },
    {
        "id": "8439b5b7fd5413bb",
        "type": "mongodb in",
        "z": "7bd5dc5320754ff6",
        "mongodb": "d561ba01de2c3543",
        "name": "",
        "collection": "datos_json",
        "operation": "find",
        "x": 770,
        "y": 720,
        "wires": [
            [
                "8cbea0560189d8a7",
                "ca37addd1988a2e0"
            ]
        ]
    },
    {
        "id": "9859fc5e082e18f1",
        "type": "inject",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "x": 430,
        "y": 700,
        "wires": [
            [
                "c16e2be465569c24"
            ]
        ]
    },
    {
        "id": "4f7da6c181d46462",
        "type": "comment",
        "z": "7bd5dc5320754ff6",
        "name": "modificar limite",
        "info": "",
        "x": 400,
        "y": 660,
        "wires": []
    },
    {
        "id": "c16e2be465569c24",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "func": "//msg.payload = {\"BME280.Temperatura\" : {\"$gte\":flow.get(\"temperatura\")}}\nmsg.limit = flow.get(\"parametro\");\nmsg.sort = {\"date\" : -1}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 820,
        "wires": [
            [
                "8439b5b7fd5413bb",
                "12561cc1e217fb58"
            ]
        ]
    },
    {
        "id": "8cbea0560189d8a7",
        "type": "template",
        "z": "7bd5dc5320754ff6",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Registros: </h1>\n <ul>\n{{#payload}}\n  <li>{{date}} : {{BME280.Temperatura }}¬∫C, {{BME280.Humedad}}% </li>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 1124.2158660888672,
        "y": 835.3892774581909,
        "wires": [
            [
                "48befae2bc9ead50"
            ]
        ]
    },
    {
        "id": "48befae2bc9ead50",
        "type": "ui_template",
        "z": "7bd5dc5320754ff6",
        "group": "7248e158bc5e1353",
        "name": "",
        "order": 3,
        "width": "6",
        "height": "4",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1324.2158660888672,
        "y": 835.3892774581909,
        "wires": [
            []
        ]
    },
    {
        "id": "ca37addd1988a2e0",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "genera datos gr√°fica",
        "func": "var arraytemp=[];\nvar arrayhum=[];\n\n// los arrays usados en la represenstaci√≥n gr√°fica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el m√©todo getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // a√±ade datos a los arrays\n        arraytemp.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].BME280.Temperatura});\n        arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].BME280.Humedad});\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"Temperatura\",\"Humedad\"],\n        \"data\":[arraytemp, arrayhum],\n        \"labels\":[\"\"]\n        }];\n\nreturn msg;  ",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1124.2158660888672,
        "y": 795.3892774581909,
        "wires": [
            [
                "f3c892d5b078c16d"
            ]
        ]
    },
    {
        "id": "f3c892d5b078c16d",
        "type": "ui_chart",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "group": "7248e158bc5e1353",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1314.2158660888672,
        "y": 795.3892774581909,
        "wires": [
            []
        ]
    },
    {
        "id": "9f3f9a7e5f0a6702",
        "type": "mongodb in",
        "z": "7bd5dc5320754ff6",
        "mongodb": "d561ba01de2c3543",
        "name": "",
        "collection": "datos_json",
        "operation": "find",
        "x": 850,
        "y": 1200,
        "wires": [
            [
                "de9e2efed06c41f0",
                "6e69e8cb5fec7c9f"
            ]
        ]
    },
    {
        "id": "3d4a3eba10ea7fd5",
        "type": "inject",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "x": 410,
        "y": 1280,
        "wires": [
            [
                "3a865ddb64bdeb35"
            ]
        ]
    },
    {
        "id": "b4d5521c9b4c33be",
        "type": "debug",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 810,
        "y": 1260,
        "wires": []
    },
    {
        "id": "43130eda6472d509",
        "type": "comment",
        "z": "7bd5dc5320754ff6",
        "name": "consultar 10 ultimos",
        "info": "",
        "x": 390,
        "y": 1240,
        "wires": []
    },
    {
        "id": "3a865ddb64bdeb35",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "func": "//msg.payload = {\"BME280.Temperatura\" : {\"$gte\":flow.get(\"temperatura\")}}\nmsg.limit = 10;\nmsg.sort = {\"date\" : -1}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1300,
        "wires": [
            [
                "9f3f9a7e5f0a6702",
                "f5d077adf88ba5dc",
                "b4d5521c9b4c33be"
            ]
        ]
    },
    {
        "id": "de9e2efed06c41f0",
        "type": "template",
        "z": "7bd5dc5320754ff6",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Registros: </h1>\n <ul>\n{{#payload}}\n  <li>{{date}} : {{BME280.Temperatura }}¬∫C, {{BME280.Humedad}}% </li>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 1204.2158660888672,
        "y": 1315.389277458191,
        "wires": [
            [
                "3e62681036a7f6fe"
            ]
        ]
    },
    {
        "id": "3e62681036a7f6fe",
        "type": "ui_template",
        "z": "7bd5dc5320754ff6",
        "group": "a7c3c7e1025d343b",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "4",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1404.2158660888672,
        "y": 1315.389277458191,
        "wires": [
            []
        ]
    },
    {
        "id": "6e69e8cb5fec7c9f",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "genera datos gr√°fica",
        "func": "var arraytemp=[];\nvar arrayhum=[];\n\n// los arrays usados en la represenstaci√≥n gr√°fica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el m√©todo getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // a√±ade datos a los arrays\n        arraytemp.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].BME280.Temperatura});\n        arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].BME280.Humedad});\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"Temperatura\",\"Humedad\"],\n        \"data\":[arraytemp, arrayhum],\n        \"labels\":[\"\"]\n        }];\n\nreturn msg;  ",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1204.2158660888672,
        "y": 1275.389277458191,
        "wires": [
            [
                "ffd45a0f22ea7cad"
            ]
        ]
    },
    {
        "id": "ffd45a0f22ea7cad",
        "type": "ui_chart",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "group": "a7c3c7e1025d343b",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1394.2158660888672,
        "y": 1275.389277458191,
        "wires": [
            []
        ]
    },
    {
        "id": "f5d077adf88ba5dc",
        "type": "debug",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "limit",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1300,
        "wires": []
    },
    {
        "id": "db74e7dfecf3e92a",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "func": "//msg.payload = {\"BME280.Temperatura\" : {\"$gte\":flow.get(\"temperatura\")}}\nmsg.limit = 1;\nmsg.sort = {\"date\" : -1}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 480,
        "wires": [
            [
                "80c7ab17e4cc51db"
            ]
        ]
    },
    {
        "id": "4e73d64cba504d25",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "genera datos gr√°fica",
        "func": "var arraytemp=[];\nvar arrayhum=[];\n\n// los arrays usados en la represenstaci√≥n gr√°fica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el m√©todo getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // a√±ade datos a los arrays\n        arraytemp.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].BME280.Temperatura});\n        arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].BME280.Humedad});\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"Temperatura\",\"Humedad\"],\n        \"data\":[arraytemp, arrayhum],\n        \"labels\":[\"\"]\n        }];\n\nreturn msg;  ",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 320,
        "wires": [
            [
                "0d1f7baffa07b1c4"
            ]
        ]
    },
    {
        "id": "0d1f7baffa07b1c4",
        "type": "ui_chart",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "group": "3615a1ca1b2afad1",
        "order": 1,
        "width": "0",
        "height": "0",
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1250,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "0b73b77d5cb52323",
        "type": "mongodb in",
        "z": "7bd5dc5320754ff6",
        "mongodb": "d561ba01de2c3543",
        "name": "",
        "collection": "datos_json",
        "operation": "find",
        "x": 770,
        "y": 300,
        "wires": [
            [
                "4e73d64cba504d25"
            ]
        ]
    },
    {
        "id": "7b0f5109a0222156",
        "type": "mongodb in",
        "z": "7bd5dc5320754ff6",
        "mongodb": "d561ba01de2c3543",
        "name": "",
        "collection": "datos_json",
        "operation": "find",
        "x": 890,
        "y": 960,
        "wires": [
            [
                "3e0a72d44ee76294",
                "0cf58b0b8bd4407e"
            ]
        ]
    },
    {
        "id": "0a77acd95be1e368",
        "type": "inject",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "x": 550,
        "y": 940,
        "wires": [
            [
                "db3a2223c8b382db"
            ]
        ]
    },
    {
        "id": "1f96112fa00a8f8b",
        "type": "comment",
        "z": "7bd5dc5320754ff6",
        "name": "filtrar por temperatura",
        "info": "",
        "x": 540,
        "y": 900,
        "wires": []
    },
    {
        "id": "db3a2223c8b382db",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "func": "msg.payload = {\"BME280.Temperatura\" : {\"$gte\":flow.get(\"temperatura\")}}\n//msg.limit = 1;\nmsg.sort = {\"date\" : -1}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1020,
        "wires": [
            [
                "7b0f5109a0222156"
            ]
        ]
    },
    {
        "id": "3e0a72d44ee76294",
        "type": "template",
        "z": "7bd5dc5320754ff6",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Registros: </h1>\n <ul>\n{{#payload}}\n  <li>{{date}} : {{BME280.Temperatura }}¬∫C, {{BME280.Humedad}}% </li>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 1244.2158660888672,
        "y": 1075.389277458191,
        "wires": [
            [
                "8b8edb5d9272eed0"
            ]
        ]
    },
    {
        "id": "8b8edb5d9272eed0",
        "type": "ui_template",
        "z": "7bd5dc5320754ff6",
        "group": "df7ffb88971cb0d2",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "4",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1444.2158660888672,
        "y": 1075.389277458191,
        "wires": [
            []
        ]
    },
    {
        "id": "0cf58b0b8bd4407e",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "genera datos gr√°fica",
        "func": "var arraytemp=[];\nvar arrayhum=[];\n\n// los arrays usados en la represenstaci√≥n gr√°fica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el m√©todo getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // a√±ade datos a los arrays\n        arraytemp.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].BME280.Temperatura});\n        arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].BME280.Humedad});\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"Temperatura\",\"Humedad\"],\n        \"data\":[arraytemp, arrayhum],\n        \"labels\":[\"\"]\n        }];\n\nreturn msg;  ",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1244.2158660888672,
        "y": 1035.389277458191,
        "wires": [
            [
                "147cec553db396c6"
            ]
        ]
    },
    {
        "id": "147cec553db396c6",
        "type": "ui_chart",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "group": "df7ffb88971cb0d2",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1434.2158660888672,
        "y": 1035.389277458191,
        "wires": [
            []
        ]
    },
    {
        "id": "56c28e6b374492c7",
        "type": "ui_slider",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "label": "Muestras",
        "tooltip": "",
        "group": "7248e158bc5e1353",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "topicType": "str",
        "min": "1",
        "max": "100",
        "step": 1,
        "className": "",
        "x": 620,
        "y": 660,
        "wires": [
            [
                "47d28d432a7fa619"
            ]
        ]
    },
    {
        "id": "47d28d432a7fa619",
        "type": "change",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "parametro",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "0202d1ef5d6fc826",
        "type": "change",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temperatura",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "35f81fb2febd3788",
        "type": "ui_numeric",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "label": "Temp Minima",
        "tooltip": "",
        "group": "df7ffb88971cb0d2",
        "order": 7,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "30",
        "step": 1,
        "className": "",
        "x": 750,
        "y": 900,
        "wires": [
            [
                "0202d1ef5d6fc826"
            ]
        ]
    },
    {
        "id": "12561cc1e217fb58",
        "type": "debug",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "limit",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 820,
        "wires": []
    },
    {
        "id": "a021433cba844d82",
        "type": "mongodb in",
        "z": "7bd5dc5320754ff6",
        "mongodb": "d561ba01de2c3543",
        "name": "",
        "collection": "datos_json",
        "operation": "find",
        "x": 850,
        "y": 1440,
        "wires": [
            [
                "5527e54e89684ec9",
                "ce649ae8149dc9ca"
            ]
        ]
    },
    {
        "id": "91187f28e18d51d6",
        "type": "inject",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "x": 410,
        "y": 1520,
        "wires": [
            [
                "e764b9bf13d9e01b"
            ]
        ]
    },
    {
        "id": "03b4102c266e3ad7",
        "type": "debug",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 810,
        "y": 1500,
        "wires": []
    },
    {
        "id": "0a2f963813c00f95",
        "type": "comment",
        "z": "7bd5dc5320754ff6",
        "name": "consultar 5 √∫ltimos min",
        "info": "",
        "x": 400,
        "y": 1480,
        "wires": []
    },
    {
        "id": "e764b9bf13d9e01b",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "func": "var ms_minute = 60000;\nvar now_ms = new Date().getTime();\nvar fiveminsago = new Date(now_ms-5*ms_minute);\nmsg.payload = {\"date\" : {\"$gte\": fiveminsago}};\nmsg.sort = {\"date\" : -1}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 1540,
        "wires": [
            [
                "a021433cba844d82",
                "3bdcb03c45667896",
                "03b4102c266e3ad7"
            ]
        ]
    },
    {
        "id": "5527e54e89684ec9",
        "type": "template",
        "z": "7bd5dc5320754ff6",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Registros: </h1>\n <ul>\n{{#payload}}\n  <li>{{date}} : {{BME280.Temperatura }}¬∫C, {{BME280.Humedad}}% </li>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 1204.2158660888672,
        "y": 1555.389277458191,
        "wires": [
            [
                "67599fbae110e566"
            ]
        ]
    },
    {
        "id": "67599fbae110e566",
        "type": "ui_template",
        "z": "7bd5dc5320754ff6",
        "group": "bc20b86a34bc490b",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "4",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1404.2158660888672,
        "y": 1555.389277458191,
        "wires": [
            []
        ]
    },
    {
        "id": "ce649ae8149dc9ca",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "genera datos gr√°fica",
        "func": "var arraytemp=[];\nvar arrayhum=[];\n\n// los arrays usados en la represenstaci√≥n gr√°fica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el m√©todo getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // a√±ade datos a los arrays\n        arraytemp.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].BME280.Temperatura});\n        arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].BME280.Humedad});\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"Temperatura\",\"Humedad\"],\n        \"data\":[arraytemp, arrayhum],\n        \"labels\":[\"\"]\n        }];\n\nreturn msg;  ",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1204.2158660888672,
        "y": 1515.389277458191,
        "wires": [
            [
                "991c496379c76dd4"
            ]
        ]
    },
    {
        "id": "991c496379c76dd4",
        "type": "ui_chart",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "group": "bc20b86a34bc490b",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1394.2158660888672,
        "y": 1515.389277458191,
        "wires": [
            []
        ]
    },
    {
        "id": "3bdcb03c45667896",
        "type": "debug",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "limit",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1540,
        "wires": []
    },
    {
        "id": "69f96bd2e5fe77ce",
        "type": "mongodb in",
        "z": "7bd5dc5320754ff6",
        "mongodb": "d561ba01de2c3543",
        "name": "",
        "collection": "datos_json",
        "operation": "find",
        "x": 790,
        "y": 1660,
        "wires": [
            [
                "b4fe21a8634dd5c3",
                "d386a5ac028dc3a4"
            ]
        ]
    },
    {
        "id": "5b504dd0facef694",
        "type": "inject",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "x": 350,
        "y": 1740,
        "wires": [
            [
                "d5d7aef4763cc571"
            ]
        ]
    },
    {
        "id": "7bfcd80103472114",
        "type": "debug",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 750,
        "y": 1720,
        "wires": []
    },
    {
        "id": "5535bbc48ab8ac5a",
        "type": "comment",
        "z": "7bd5dc5320754ff6",
        "name": "consultar 5-15 √∫ltimos min",
        "info": "",
        "x": 350,
        "y": 1700,
        "wires": []
    },
    {
        "id": "d5d7aef4763cc571",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "func": "var ms_minute = 60000;\nvar now_ms = new Date().getTime();\nvar fiveminsago = new Date(now_ms-5*ms_minute);\nvar fifteenminsago = new Date(now_ms-15*ms_minute);\nmsg.payload = {\"$and\" : [ {\"date\" : {\"$lte\":fiveminsago}}, {\"date\" : {\"$gte\":fifteenminsago}} ]};\nmsg.sort = {\"date\" : -1}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1760,
        "wires": [
            [
                "69f96bd2e5fe77ce",
                "ae65defbabefcaaf",
                "7bfcd80103472114"
            ]
        ]
    },
    {
        "id": "b4fe21a8634dd5c3",
        "type": "template",
        "z": "7bd5dc5320754ff6",
        "name": "lista en formato html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": " <h1>Registros: </h1>\n <ul>\n{{#payload}}\n  <li>{{date}} : {{BME280.Temperatura }}¬∫C, {{BME280.Humedad}}% </li>\n{{/payload}}\n </ul>",
        "output": "str",
        "x": 1144.2158660888672,
        "y": 1775.389277458191,
        "wires": [
            [
                "9be66905da0e1c1b"
            ]
        ]
    },
    {
        "id": "9be66905da0e1c1b",
        "type": "ui_template",
        "z": "7bd5dc5320754ff6",
        "group": "b276f50334e45f5e",
        "name": "",
        "order": 0,
        "width": "6",
        "height": "4",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1344.2158660888672,
        "y": 1775.389277458191,
        "wires": [
            []
        ]
    },
    {
        "id": "d386a5ac028dc3a4",
        "type": "function",
        "z": "7bd5dc5320754ff6",
        "name": "genera datos gr√°fica",
        "func": "var arraytemp=[];\nvar arrayhum=[];\n\n// los arrays usados en la represenstaci√≥n gr√°fica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el m√©todo getTime()\n// en y debemos poner el valor de la variable\n// mas info en: https://github.com/node-red/node-red-dashboard/blob/master/Charts.md\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++) { // a√±ade datos a los arrays\n        arraytemp.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].BME280.Temperatura});\n        arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].BME280.Humedad});\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"Temperatura\",\"Humedad\"],\n        \"data\":[arraytemp, arrayhum],\n        \"labels\":[\"\"]\n        }];\n\nreturn msg;  ",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1144.2158660888672,
        "y": 1735.389277458191,
        "wires": [
            [
                "ef3256d131287bb7"
            ]
        ]
    },
    {
        "id": "ef3256d131287bb7",
        "type": "ui_chart",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "group": "b276f50334e45f5e",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1334.2158660888672,
        "y": 1735.389277458191,
        "wires": [
            []
        ]
    },
    {
        "id": "ae65defbabefcaaf",
        "type": "debug",
        "z": "7bd5dc5320754ff6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "limit",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1760,
        "wires": []
    }
]