[
    {
        "id": "2fa3fa15a5e7757a",
        "type": "tab",
        "label": "BASE DE DATOS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "55877cb9980ea73a",
        "type": "mqtt in",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "topic": "II12/+/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "759329fc13f505d4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 190,
        "y": 160,
        "wires": [
            [
                "7ee265fec3c25901"
            ]
        ]
    },
    {
        "id": "61ddf906ca66ba6d",
        "type": "function",
        "z": "2fa3fa15a5e7757a",
        "name": "payload + fecha",
        "func": "// Vamos a añadir a cada dato la fecha a la que ha sido recibido.\nmsg.payload.date = new Date();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 160,
        "wires": [
            [
                "d3647de174c973f0"
            ]
        ]
    },
    {
        "id": "d3647de174c973f0",
        "type": "mongodb out",
        "z": "2fa3fa15a5e7757a",
        "mongodb": "98277d641a9c0bb9",
        "name": "",
        "collection": "ProyectoGrupo12",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 850,
        "y": 160,
        "wires": []
    },
    {
        "id": "a4a2dbe10ba9f984",
        "type": "comment",
        "z": "2fa3fa15a5e7757a",
        "name": "Almacenamos en la colección datos de los sensores, actuadores y conexión",
        "info": "",
        "x": 390,
        "y": 60,
        "wires": []
    },
    {
        "id": "aee17f4d38c5ddaf",
        "type": "comment",
        "z": "2fa3fa15a5e7757a",
        "name": "Añadimos el campo fecha",
        "info": "",
        "x": 590,
        "y": 120,
        "wires": []
    },
    {
        "id": "7ee265fec3c25901",
        "type": "json",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 160,
        "wires": [
            [
                "61ddf906ca66ba6d",
                "d5d3585b2b64907a"
            ]
        ]
    },
    {
        "id": "c0b3b70f5e50c93a",
        "type": "function",
        "z": "2fa3fa15a5e7757a",
        "name": "consulta rapida",
        "func": "// Guardamos el tipo de consulta en una variable.\nvar consulta = flow.get(\"consulta\");\n// Vaciamos el payload.\nmsg.payload ={};\n\n// Variables de tiempo auxiliares.\nvar ms_minuto = 60000;\nvar ms_hora = 60 * ms_minuto;\nvar ms_dia = 24 * ms_hora;\nvar ms_semana = 7 * ms_dia;\nvar ms_mes = 30 * ms_dia;\n\n// Variable con el timestamp actual (en ms)\nvar now_ms = new Date().getTime();\n\n// Creamos objetos fecha con el timestamp deseado.\nvar hour_ago = new Date(now_ms - ms_hora);\nvar day_ago = new Date(now_ms - ms_dia);\nvar week_ago = new Date(now_ms - ms_semana);\nvar month_ago = new Date(now_ms - ms_mes);\n\n// Dependiendo del botón pulsado, tenemos una fecha u otra.\nif(consulta === \"hora\")\n{\n    msg.payload = [\n    { \"$match\": {\"date\": {\"$gte\": hour_ago}}},\n    { \"$project\": {\n      \"_id\": 0,\n      \"CHIPID\": 1,\n      \"date\": 1,\n      \"Uptime\": 1,\n      \"Vcc\": 1,\n      \"LED\": 1,\n      \"SWITCH\": 1,\n      \"temperatura\": \"$DHT11.Temperatura\",\n      \"humedad\": \"$DHT11.Humedad\",\n      \"ssid\": \"$Wifi.SSID\",\n      \"ip\": \"$Wifi.IP\",\n      \"rssi\": \"$Wifi.RSSI\"\n      }\n    },\n    { \"$sort\": {\"date\": 1} }\n    ];\n} \n\nelse if(consulta === \"dia\")\n{\n    msg.payload= [\n    { \"$match\": {\"date\": {\"$gte\": day_ago}}},\n    { \"$project\": {\n      \"_id\": 0, \n      \"CHIPID\": 1,\n      \"date\": 1,\n      \"Uptime\": 1,\n      \"Vcc\": 1,\n      \"LED\": 1,\n      \"SWITCH\": 1, \n      \"temperatura\": \"$DHT11.Temperatura\",\n      \"humedad\": \"$DHT11.Humedad\",\n      \"ssid\": \"$Wifi.SSID\",\n      \"ip\": \"$Wifi.IP\",\n      \"rssi\": \"$Wifi.RSSI\"\n      }\n    },\n    { \"$sort\": {\"date\": 1} }\n    ];\n}\n\nelse if(consulta === \"semana\")\n{\n    msg.payload = [\n    { \"$match\": {\"date\": {\"$gte\": week_ago}}},\n    { \"$project\": {\n      \"_id\": 0,\n      \"CHIPID\": 1,\n      \"date\": 1,\n      \"Uptime\": 1,\n      \"Vcc\": 1,\n      \"LED\": 1,\n      \"SWITCH\": 1,\n      \"temperatura\": \"$DHT11.Temperatura\",\n      \"humedad\": \"$DHT11.Humedad\",\n      \"ssid\": \"$Wifi.SSID\",\n      \"ip\": \"$Wifi.IP\",\n      \"rssi\": \"$Wifi.RSSI\"\n      }\n    },\n    { \"$sort\": {\"date\": 1} }\n    ];\n}\n\nelse if (consulta === \"mes\")\n{\n    msg.payload = [\n    { \"$match\": {\"date\": {\"$gte\": month_ago}}},\n    { \"$project\": {\n      \"_id\": 0,\n      \"CHIPID\": 1,\n      \"date\": 1,\n      \"Uptime\": 1,\n      \"Vcc\": 1,\n      \"LED\": 1,\n      \"SWITCH\": 1,\n      \"temperatura\": \"$DHT11.Temperatura\",\n      \"humedad\": \"$DHT11.Humedad\",\n      \"ssid\": \"$Wifi.SSID\",\n      \"ip\": \"$Wifi.IP\",\n      \"rssi\": \"$Wifi.RSSI\"\n      }\n    },\n    { \"$sort\": {\"date\": 1} }\n    ];\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 440,
        "wires": [
            [
                "dcb4d6823a68c481"
            ]
        ]
    },
    {
        "id": "8214c5c629a01fff",
        "type": "comment",
        "z": "2fa3fa15a5e7757a",
        "name": "Guardamos en un fichero los documentos consultados",
        "info": "",
        "x": 1440,
        "y": 400,
        "wires": []
    },
    {
        "id": "c294ce99c7e22930",
        "type": "function",
        "z": "2fa3fa15a5e7757a",
        "name": "consulta intervalo",
        "func": "// Fecha por defecto actual\nvar ahora = new Date();\n\n// Si en el dashboard se han seleccionado fechas de inicio y fin toma\n// sus variables globales, sino toma la fecha actual por defecto.\nvar desde = new Date(global.get(\"inicio\") || ahora);\nvar hasta = new Date(global.get(\"fin\") || ahora); \n\n// El día de inicio comienza a las 00:00\nvar inicio = new Date(desde.getFullYear(),desde.getMonth(),desde.getDate(),0,0,0,0);\n// el día final es hasta final del día\nvar final = new Date(hasta.getFullYear(),hasta.getMonth(),hasta.getDate(),23,59,59,999);\n\n// Sacamos los documentos de la colección que hay entre el día de inicio y el día final,\n// ordenándolos de más antiguos a menos.\nmsg.payload = [\n    { \"$match\": {\"date\": {\"$gte\": inicio, \"$lte\": final}}},\n    { \"$project\": {\n      \"date\": 1,\n      \"temperatura\": \"$DHT11.Temperatura\",\n      \"humedad\": \"$DHT11.Humedad\",\n    }},\n     { \"$group\": {\n      \"_id\": 0,\n      \"Tmedia\": {\"$avg\": \"$temperatura\"},\n      \"Tmax\": {\"$max\": \"$temperatura\"},\n      \"Tmin\": {\"$min\": \"$temperatura\"},\n      \"Tdev\": {\"$stdDevPop\": \"$humedad\"},\n      \"Hmedia\": {\"$avg\": \"$humedad\"},\n      \"Hmax\": {\"$max\": \"$humedad\"},\n      \"Hmin\": {\"$min\": \"$humedad\"},\n      \"Hdev\": {\"$stdDevPop\": \"$humedad\"}\n    }},\n    { \"$sort\": {\"date\": 1} }\n    ];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 980,
        "wires": [
            [
                "796a5b15b1b4120e",
                "b385529a89cf6c55"
            ]
        ]
    },
    {
        "id": "6f01ad42be8a71e6",
        "type": "http in",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "url": "/RegistrosConsultaRapida",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 270,
        "y": 440,
        "wires": [
            [
                "c0b3b70f5e50c93a"
            ]
        ]
    },
    {
        "id": "03256d3831174d0d",
        "type": "ui_template",
        "z": "2fa3fa15a5e7757a",
        "group": "e8ac12aa380cb87f",
        "name": "Estadisticas",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<style>\n.button {\n    text-align: center;\n    font: bold 17px Arial;\n    text-decoration: none;\n    background-color: #439ebf;\n    color: white;\n    padding: 8px 10px;\n    border: 2px solid #CCCCCC;\n  }\n  \n  .button:hover\n  {\n   background-color: #317a94;\n  }\n\n</style>\n<a href=\"/RegistrosIntervalo\" class=\"button\">Descarga estadisticas en CSV (EXCEL)</a>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 830,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "18e7566ca8adc52c",
        "type": "ui_date_picker",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "label": "Fecha inicio",
        "group": "e8ac12aa380cb87f",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "33f65a6bbabfbdcd"
            ]
        ]
    },
    {
        "id": "869b137a9ea9386c",
        "type": "ui_date_picker",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "label": "Fecha final",
        "group": "e8ac12aa380cb87f",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "906c296024a01c76"
            ]
        ]
    },
    {
        "id": "33f65a6bbabfbdcd",
        "type": "change",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "inicio",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1160,
        "wires": [
            [
                "d9956ad58851a011"
            ]
        ]
    },
    {
        "id": "906c296024a01c76",
        "type": "change",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fin",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1220,
        "wires": [
            [
                "7ee5658bfde4dd9e"
            ]
        ]
    },
    {
        "id": "30390d0a0511c256",
        "type": "comment",
        "z": "2fa3fa15a5e7757a",
        "name": "Controles para seleccionar fechas del intervalo",
        "info": "",
        "x": 300,
        "y": 1100,
        "wires": []
    },
    {
        "id": "05b9f96236078cc4",
        "type": "comment",
        "z": "2fa3fa15a5e7757a",
        "name": "Botones en HTML para lanzar descarga de fichero",
        "info": "",
        "x": 930,
        "y": 1360,
        "wires": []
    },
    {
        "id": "2845f9272b69c54b",
        "type": "ui_text",
        "z": "2fa3fa15a5e7757a",
        "group": "f437324503dfedde",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Maximo Humedad",
        "format": "{{msg.payload[0].Hmax | number:2}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1090,
        "y": 1040,
        "wires": []
    },
    {
        "id": "94062b5daa0d6525",
        "type": "ui_text",
        "z": "2fa3fa15a5e7757a",
        "group": "f437324503dfedde",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Minimo Humedad",
        "format": "{{msg.payload[0].Hmin | number:2}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1070,
        "y": 1080,
        "wires": []
    },
    {
        "id": "0e5536a8b3ae50af",
        "type": "ui_text",
        "z": "2fa3fa15a5e7757a",
        "group": "f437324503dfedde",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Media Humedad",
        "format": "{{msg.payload[0].Hmedia | number:2}} %",
        "layout": "row-spread",
        "className": "",
        "x": 1040,
        "y": 1120,
        "wires": []
    },
    {
        "id": "4285a89045ae24b9",
        "type": "ui_text",
        "z": "2fa3fa15a5e7757a",
        "group": "f437324503dfedde",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Desviacion Humedad",
        "format": "{{msg.payload[0].Hdev | number:2 }}",
        "layout": "row-spread",
        "className": "",
        "x": 1040,
        "y": 1160,
        "wires": []
    },
    {
        "id": "9cd3807560edf284",
        "type": "ui_text",
        "z": "2fa3fa15a5e7757a",
        "group": "f437324503dfedde",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Maximo Temperatura",
        "format": "{{msg.payload[0].Tmax | number:2}} ºC",
        "layout": "row-spread",
        "className": "",
        "x": 1040,
        "y": 800,
        "wires": []
    },
    {
        "id": "bc153547541a4915",
        "type": "ui_text",
        "z": "2fa3fa15a5e7757a",
        "group": "f437324503dfedde",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Minimo Temperatura",
        "format": "{{msg.payload[0].Tmin | number:2}} ºC",
        "layout": "row-spread",
        "className": "",
        "x": 1060,
        "y": 840,
        "wires": []
    },
    {
        "id": "d5cf9ab978379020",
        "type": "ui_text",
        "z": "2fa3fa15a5e7757a",
        "group": "f437324503dfedde",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Media Temperatura",
        "format": "{{msg.payload[0].Tmedia | number:2}} ºC",
        "layout": "row-spread",
        "className": "",
        "x": 1070,
        "y": 880,
        "wires": []
    },
    {
        "id": "e1d5c7ddd1aed521",
        "type": "ui_text",
        "z": "2fa3fa15a5e7757a",
        "group": "f437324503dfedde",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Desviacion Temperatura",
        "format": "{{msg.payload[0].Tdev | number:2}}",
        "layout": "row-spread",
        "className": "",
        "x": 1110,
        "y": 920,
        "wires": []
    },
    {
        "id": "ff460821de79d1ab",
        "type": "csv",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "sep": ";",
        "hdrin": false,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "date, Uptime, ssid, ip, rssi, Vcc, LED, SWITCH, temperatura, humedad",
        "skip": 0,
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1130,
        "y": 440,
        "wires": [
            [
                "5628bae4d3179c70"
            ]
        ]
    },
    {
        "id": "acebdfdc19b4e2a5",
        "type": "http response",
        "z": "2fa3fa15a5e7757a",
        "name": "Descarga csv",
        "statusCode": "",
        "headers": {
            "Content-Disposition": "attachment; filename=RegistrosConsultaRapida.csv"
        },
        "x": 1560,
        "y": 440,
        "wires": []
    },
    {
        "id": "5628bae4d3179c70",
        "type": "function",
        "z": "2fa3fa15a5e7757a",
        "name": "Unicode y separador",
        "func": "//add Unicode BOM character (byte order mark) to make EXCEL knows this is UTF-8\nif(global.get(\"separador_decimal\")==\"punto\")\n{\n    msg.payload='\\ufeff'+msg.payload;\n\n}\nelse\n{\n    msg.payload='\\ufeff'+(msg.payload).replace(/\\./g,\",\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 440,
        "wires": [
            [
                "acebdfdc19b4e2a5"
            ]
        ]
    },
    {
        "id": "796a5b15b1b4120e",
        "type": "mongodb in",
        "z": "2fa3fa15a5e7757a",
        "mongodb": "98277d641a9c0bb9",
        "name": "",
        "collection": "ProyectoGrupo12",
        "operation": "aggregate",
        "x": 730,
        "y": 980,
        "wires": [
            [
                "f99325ba2d269bc1",
                "9cd3807560edf284",
                "bc153547541a4915",
                "e1d5c7ddd1aed521",
                "d5cf9ab978379020",
                "2845f9272b69c54b",
                "94062b5daa0d6525",
                "0e5536a8b3ae50af",
                "4285a89045ae24b9"
            ]
        ]
    },
    {
        "id": "f99325ba2d269bc1",
        "type": "csv",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "sep": ";",
        "hdrin": true,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "Tmedia, Tmax, Tmin, Tdev, Hmedia, Hmax, Hmin, Hdev",
        "skip": 0,
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1090,
        "y": 980,
        "wires": [
            [
                "c7fe49c1f7ea78e4"
            ]
        ]
    },
    {
        "id": "4c56147dde78c462",
        "type": "http response",
        "z": "2fa3fa15a5e7757a",
        "name": "Descarga csv",
        "statusCode": "",
        "headers": {
            "Content-Disposition": "attachment; filename=RegistrosIntervalo.csv"
        },
        "x": 1520,
        "y": 980,
        "wires": []
    },
    {
        "id": "c7fe49c1f7ea78e4",
        "type": "function",
        "z": "2fa3fa15a5e7757a",
        "name": "Unicode y separador",
        "func": "//add Unicode BOM character (byte order mark) to make EXCEL knows this is UTF-8\nif(global.get(\"separador_decimal\")==\"punto\")\n{\n    msg.payload='\\ufeff'+msg.payload;\n\n}\nelse\n{\n    msg.payload='\\ufeff'+(msg.payload).replace(/\\./g,\",\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 980,
        "wires": [
            [
                "4c56147dde78c462"
            ]
        ]
    },
    {
        "id": "be37f2b4f9d789b9",
        "type": "ui_chart",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "group": "197dc373ad7e939d",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Evolución Histórica Huerto 1",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/M HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1560,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "d04c633872533496",
        "type": "comment",
        "z": "2fa3fa15a5e7757a",
        "name": "Consultas de intervalo: para obtener estadísticas",
        "info": "",
        "x": 280,
        "y": 880,
        "wires": []
    },
    {
        "id": "b467b9686bf3b350",
        "type": "comment",
        "z": "2fa3fa15a5e7757a",
        "name": "Consultas rápidas: gráfico con evolución de sensores",
        "info": "",
        "x": 320,
        "y": 380,
        "wires": []
    },
    {
        "id": "65319a7c019cee09",
        "type": "function",
        "z": "2fa3fa15a5e7757a",
        "name": "genera datos gráfica huerto 1",
        "func": "// Tenemos un array con las temperaturas y humedades del huerto para representar una gráfica con ellos.\nvar arraytemp=[];\nvar arrayhum=[];\n\n// los arrays usados en la represenstación gráfica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el método getTime()\n// en y debemos poner el valor de la variable\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++)   // añade datos a los array\n    { \n        if ((msg.payload[i].CHIPID == global.get(\"ID1\")) && (msg.payload[i].temperatura != null) && (msg.payload[i].humedad != null)) \n        {\n            arraytemp.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].temperatura});\n            arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].humedad});\n        }\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"temperatura\",\"humedad\"],\n        \"data\":[arraytemp, arrayhum],\n        \"labels\":[\"\"]\n    }];\n\nreturn msg;\n",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 540,
        "wires": [
            [
                "be37f2b4f9d789b9"
            ]
        ]
    },
    {
        "id": "33e5877edba8fd3b",
        "type": "link in",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "links": [
            "7ee5658bfde4dd9e",
            "d9956ad58851a011"
        ],
        "x": 315,
        "y": 940,
        "wires": [
            [
                "c294ce99c7e22930"
            ]
        ]
    },
    {
        "id": "7ee5658bfde4dd9e",
        "type": "link out",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "links": [
            "33e5877edba8fd3b"
        ],
        "x": 515,
        "y": 1220,
        "wires": []
    },
    {
        "id": "d9956ad58851a011",
        "type": "link out",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "links": [
            "33e5877edba8fd3b"
        ],
        "x": 515,
        "y": 1160,
        "wires": []
    },
    {
        "id": "425b90fa842f5551",
        "type": "http in",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "url": "/RegistrosIntervalo",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 980,
        "wires": [
            [
                "c294ce99c7e22930"
            ]
        ]
    },
    {
        "id": "0ca2afd4f8c32575",
        "type": "ui_template",
        "z": "2fa3fa15a5e7757a",
        "group": "e8ac12aa380cb87f",
        "name": "ConsultaRapida",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<style>\n.button {\n    text-align: center;\n    font: bold 17px Arial;\n    text-decoration: none;\n    background-color: #439ebf;\n    color: white;\n    padding: 8px 10px;\n    border: 2px solid #CCCCCC;\n  }\n  \n  .button:hover\n  {\n   background-color: #317a94;\n  }\n\n</style>\n<a href=\"/RegistrosConsultaRapida\" class=\"button\">Descarga registros en CSV (EXCEL)</a>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1020,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "f6504e14aea89612",
        "type": "ui_switch",
        "z": "2fa3fa15a5e7757a",
        "name": "Separador Decimal",
        "label": "{{msg.topic}}",
        "tooltip": "",
        "group": "e8ac12aa380cb87f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 290,
        "y": 1500,
        "wires": [
            [
                "8f11d88ec16933cd"
            ]
        ]
    },
    {
        "id": "fc301af41fd815f4",
        "type": "inject",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170.99706649780273,
        "y": 1422.9118814468384,
        "wires": [
            [
                "8f11d88ec16933cd"
            ]
        ]
    },
    {
        "id": "8f11d88ec16933cd",
        "type": "function",
        "z": "2fa3fa15a5e7757a",
        "name": "set global separador_decimal",
        "func": "if(msg.payload===true)\n{\n    global.set(\"separador_decimal\",\"coma\");\n    msg.topic=\"separador decimal = coma\";\n}\nelse\n{\n    global.set(\"separador_decimal\",\"punto\");\n    msg.topic=\"separador decimal = punto\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 499.0084533691406,
        "y": 1423.6192541122437,
        "wires": [
            [
                "f6504e14aea89612"
            ]
        ]
    },
    {
        "id": "4b9222f78cc53cf8",
        "type": "comment",
        "z": "2fa3fa15a5e7757a",
        "name": "Selector de separador decimal (Coma o punto)",
        "info": "",
        "x": 280,
        "y": 1360,
        "wires": []
    },
    {
        "id": "d5d3585b2b64907a",
        "type": "debug",
        "z": "2fa3fa15a5e7757a",
        "name": "Datos",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 240,
        "wires": []
    },
    {
        "id": "41dd53cb6ba8ef03",
        "type": "debug",
        "z": "2fa3fa15a5e7757a",
        "name": "Tipo Consulta",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 540,
        "wires": []
    },
    {
        "id": "dcb4d6823a68c481",
        "type": "mongodb in",
        "z": "2fa3fa15a5e7757a",
        "mongodb": "98277d641a9c0bb9",
        "name": "",
        "collection": "ProyectoGrupo12",
        "operation": "aggregate",
        "x": 830,
        "y": 440,
        "wires": [
            [
                "ff460821de79d1ab",
                "65319a7c019cee09",
                "c4616e87bc60ad63",
                "c2c67abe8d41d1dd",
                "836c6b0f9753db40",
                "314d9125e2244739"
            ]
        ]
    },
    {
        "id": "a88c30465cf92331",
        "type": "ui_dropdown",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "label": "Seleccione consulta",
        "tooltip": "",
        "place": "Select option",
        "group": "e8ac12aa380cb87f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Ultima Hora",
                "value": "hora",
                "type": "str"
            },
            {
                "label": "Ultimo Dia",
                "value": "dia",
                "type": "str"
            },
            {
                "label": "Ultima Semana",
                "value": "semana",
                "type": "str"
            },
            {
                "label": "Ultimo Mes",
                "value": "mes",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "consulta",
        "topicType": "msg",
        "className": "",
        "x": 140,
        "y": 540,
        "wires": [
            [
                "b7afea28a5f575b6"
            ]
        ]
    },
    {
        "id": "2040671315e30c34",
        "type": "ui_chart",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "group": "197dc373ad7e939d",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "Evolución Histórica Huerto 3",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/M HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "20",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1480,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "618c8fa5f0b232f7",
        "type": "ui_chart",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "group": "197dc373ad7e939d",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Evolución Histórica Huerto 4",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/M HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1440,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "c33ca0279f1f7ff0",
        "type": "ui_chart",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "group": "197dc373ad7e939d",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "Evolución Histórica Huerto 2",
        "chartType": "line",
        "legend": "false",
        "xformat": "D/M HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1520,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "c4616e87bc60ad63",
        "type": "function",
        "z": "2fa3fa15a5e7757a",
        "name": "genera datos gráfica huerto 2",
        "func": "// Tenemos un array con las temperaturas y humedades del huerto para representar una gráfica con ellos.\nvar arraytemp=[];\nvar arrayhum=[];\n\n// los arrays usados en la represenstación gráfica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el método getTime()\n// en y debemos poner el valor de la variable\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++)   // añade datos a los array\n    { \n        if ((msg.payload[i].CHIPID == global.get(\"ID2\")) && (msg.payload[i].temperatura != null) && (msg.payload[i].humedad != null))\n        {\n            arraytemp.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].temperatura});\n            arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].humedad});\n        }\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"temperatura\",\"humedad\"],\n        \"data\":[arraytemp, arrayhum],\n        \"labels\":[\"\"]\n    }];\n\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 580,
        "wires": [
            [
                "c33ca0279f1f7ff0"
            ]
        ]
    },
    {
        "id": "c2c67abe8d41d1dd",
        "type": "function",
        "z": "2fa3fa15a5e7757a",
        "name": "genera datos gráfica huerto 3",
        "func": "// Tenemos un array con las temperaturas y humedades del huerto para representar una gráfica con ellos.\nvar arraytemp=[];\nvar arrayhum=[];\n\n// los arrays usados en la represenstación gráfica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el método getTime()\n// en y debemos poner el valor de la variable\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++)   // añade datos a los array\n    { \n        if ((msg.payload[i].CHIPID == global.get(\"ID3\")) && (msg.payload[i].temperatura != null) && (msg.payload[i].humedad != null)) \n        {\n            arraytemp.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].temperatura});\n            arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].humedad});\n        }\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"temperatura\",\"humedad\"],\n        \"data\":[arraytemp, arrayhum],\n        \"labels\":[\"\"]\n    }];\n\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 620,
        "wires": [
            [
                "2040671315e30c34"
            ]
        ]
    },
    {
        "id": "836c6b0f9753db40",
        "type": "function",
        "z": "2fa3fa15a5e7757a",
        "name": "genera datos gráfica huerto 4",
        "func": "// Tenemos un array con las temperaturas y humedades del huerto para representar una gráfica con ellos.\nvar arraytemp=[];\nvar arrayhum=[];\n\n// los arrays usados en la represenstación gráfica deben contener objetos JSON con dos campos: {x , y}\n// en x debemos poner la hora en formato \"timestamp\". Si tenemos un objeto fecha se puede convertir usando el método getTime()\n// en y debemos poner el valor de la variable\n\nif(Array.isArray(msg.payload) && msg.payload.length>0)\n{\n    for (var i = 0; i < msg.payload.length; i++)   // añade datos a los array\n    { \n        if ((msg.payload[i].CHIPID == global.get(\"ID4\")) && (msg.payload[i].temperatura != null) && (msg.payload[i].humedad != null)) \n        {\n            arraytemp.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].temperatura});\n            arrayhum.push({x : msg.payload[i].date.getTime() , y : msg.payload[i].humedad});\n        }\n    }\n}\n    \nmsg.payload = [{\n        \"series\":[\"temperatura\",\"humedad\"],\n        \"data\":[arraytemp, arrayhum],\n        \"labels\":[\"\"]\n    }];\n\nreturn msg;",
        "outputs": "1",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 660,
        "wires": [
            [
                "618c8fa5f0b232f7"
            ]
        ]
    },
    {
        "id": "314d9125e2244739",
        "type": "debug",
        "z": "2fa3fa15a5e7757a",
        "name": "Consulta1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 360,
        "wires": []
    },
    {
        "id": "b385529a89cf6c55",
        "type": "debug",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 880,
        "wires": []
    },
    {
        "id": "b7afea28a5f575b6",
        "type": "change",
        "z": "2fa3fa15a5e7757a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "consulta",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 540,
        "wires": [
            [
                "41dd53cb6ba8ef03",
                "c0b3b70f5e50c93a"
            ]
        ]
    },
    {
        "id": "6c36ceade2cae609",
        "type": "ui_spacer",
        "z": "2fa3fa15a5e7757a",
        "name": "spacer",
        "group": "e8ac12aa380cb87f",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "759329fc13f505d4",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "98277d641a9c0bb9",
        "type": "mongodb",
        "hostname": "iot.ac.uma.es",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "II12",
        "name": ""
    },
    {
        "id": "e8ac12aa380cb87f",
        "type": "ui_group",
        "name": "Consultas",
        "tab": "0c21156c55c19a41",
        "order": 1,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f437324503dfedde",
        "type": "ui_group",
        "name": "Estadísticas (Consulta de Intervalos)",
        "tab": "0c21156c55c19a41",
        "order": 2,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "197dc373ad7e939d",
        "type": "ui_group",
        "name": "Gráficos (Consulta Rápida)",
        "tab": "0c21156c55c19a41",
        "order": 3,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0c21156c55c19a41",
        "type": "ui_tab",
        "name": "Base de Datos",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]
