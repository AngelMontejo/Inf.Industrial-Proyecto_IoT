[
    {
        "id": "5ced27b547041ccb",
        "type": "tab",
        "label": "FOTA",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f47e74964413dcce",
        "type": "http response",
        "z": "5ced27b547041ccb",
        "name": "OTA Response",
        "statusCode": "",
        "headers": {},
        "x": 1600,
        "y": 920,
        "wires": []
    },
    {
        "id": "e72b5c8c7ad03ab2",
        "type": "http in",
        "z": "5ced27b547041ccb",
        "name": "OTA Manager",
        "url": "/esp8266-ota",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 760,
        "wires": [
            [
                "7306d47ed3f462ee"
            ]
        ]
    },
    {
        "id": "247c7d29681be704",
        "type": "comment",
        "z": "5ced27b547041ccb",
        "name": "Firmware Upgrade",
        "info": "The system determines which firmware to send based\non the MAC address, version, and MD5 headers in the\nrequest from the ESP8266.\n\nFirstly, it checks if a firmware hash file with \nthe MAC address as the name exists, or else if a \nfirmware file with the version as the name exists.\nIf neither exist then no update is available.\n\nIt then reads the corresponding MD5 hash from the\nhash file and compares to the MD5 hash in the\nrequest.  If they match then the firmware is up\nto date and no update is required.\n\nOtherwise, it sends the contents of the firmware\nbin file and the MD5 hash value.",
        "x": 210,
        "y": 140,
        "wires": []
    },
    {
        "id": "e9b54afd2e456548",
        "type": "comment",
        "z": "5ced27b547041ccb",
        "name": "Firmware Management",
        "info": "",
        "x": 200,
        "y": 700,
        "wires": []
    },
    {
        "id": "7ccb8a5ffbd7e050",
        "type": "http in",
        "z": "5ced27b547041ccb",
        "name": "OTA Delete",
        "url": "/esp8266-ota",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "5d76193305b99452"
            ]
        ]
    },
    {
        "id": "5e66d059e7586b98",
        "type": "http in",
        "z": "5ced27b547041ccb",
        "name": "OTA Link",
        "url": "/esp8266-ota",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 191.440185546875,
        "y": 1138.3928089141846,
        "wires": [
            [
                "dad4c75ab287e1f3"
            ]
        ]
    },
    {
        "id": "78a903173d16d6be",
        "type": "http response",
        "z": "5ced27b547041ccb",
        "name": "OTA Response",
        "x": 3160,
        "y": 440,
        "wires": []
    },
    {
        "id": "cc39340135fd9e82",
        "type": "file in",
        "z": "5ced27b547041ccb",
        "name": "Load Firmware",
        "filename": "",
        "format": "",
        "sendError": false,
        "x": 2620,
        "y": 480,
        "wires": [
            [
                "78a903173d16d6be",
                "4b46ae342e698ddf"
            ]
        ]
    },
    {
        "id": "10f330726c72e2e3",
        "type": "change",
        "z": "5ced27b547041ccb",
        "name": "No Update",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "304",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2890,
        "y": 360,
        "wires": [
            [
                "78a903173d16d6be"
            ]
        ]
    },
    {
        "id": "2dedc95d99be7daa",
        "type": "change",
        "z": "5ced27b547041ccb",
        "name": "Forbidden",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "403",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Forbidden",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2880,
        "y": 220,
        "wires": [
            [
                "78a903173d16d6be"
            ]
        ]
    },
    {
        "id": "4b46ae342e698ddf",
        "type": "debug",
        "z": "5ced27b547041ccb",
        "name": "Update sent",
        "active": true,
        "console": "false",
        "complete": "req.headers.x-esp8266-sta-mac",
        "x": 2830,
        "y": 500,
        "wires": []
    },
    {
        "id": "96f4fded0712720a",
        "type": "change",
        "z": "5ced27b547041ccb",
        "name": "Save MD5 Hash",
        "rules": [
            {
                "t": "set",
                "p": "headers.x-MD5",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "md5",
                "fromt": "str",
                "to": "bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2440,
        "y": 480,
        "wires": [
            [
                "cc39340135fd9e82"
            ]
        ]
    },
    {
        "id": "9bf4d00c5fa2cab3",
        "type": "switch",
        "z": "5ced27b547041ccb",
        "name": "Update type",
        "property": "req.headers.x-esp8266-mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "spiffs",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sketch",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 550,
        "y": 280,
        "wires": [
            [
                "10f330726c72e2e3"
            ],
            [
                "8221b0c7831b6fa1"
            ]
        ]
    },
    {
        "id": "ff02bf93ae42ed0e",
        "type": "switch",
        "z": "5ced27b547041ccb",
        "name": "Compare MD5 hash",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "req.headers.x-esp8266-sketch-md5",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 2200,
        "y": 360,
        "wires": [
            [
                "10f330726c72e2e3",
                "dbdf3be3e81aab27"
            ],
            [
                "96f4fded0712720a",
                "0371852c9cc7caaa"
            ]
        ]
    },
    {
        "id": "52f29c83c0a67a04",
        "type": "catch",
        "z": "5ced27b547041ccb",
        "name": "File error",
        "scope": [
            "cc39340135fd9e82",
            "43047216cbdb9c57"
        ],
        "x": 2700,
        "y": 420,
        "wires": [
            [
                "10f330726c72e2e3",
                "c7b643c3441508bc"
            ]
        ]
    },
    {
        "id": "4e47b8a737c10e83",
        "type": "switch",
        "z": "5ced27b547041ccb",
        "name": "Check user agent",
        "property": "req.headers.user-agent",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "ESP8266-http-Update",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 370,
        "y": 240,
        "wires": [
            [
                "2dedc95d99be7daa"
            ],
            [
                "9bf4d00c5fa2cab3"
            ]
        ]
    },
    {
        "id": "8221b0c7831b6fa1",
        "type": "change",
        "z": "5ced27b547041ccb",
        "name": "Get MAC hash filename",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.headers.x-esp8266-sta-mac",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 320,
        "wires": [
            [
                "e62a46654691189e"
            ]
        ]
    },
    {
        "id": "43047216cbdb9c57",
        "type": "file in",
        "z": "5ced27b547041ccb",
        "name": "Load Hash",
        "filename": "",
        "format": "utf8",
        "sendError": false,
        "x": 2010,
        "y": 360,
        "wires": [
            [
                "ff02bf93ae42ed0e"
            ]
        ]
    },
    {
        "id": "ddc4273451069b78",
        "type": "change",
        "z": "5ced27b547041ccb",
        "name": "Get Version hash filename",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.headers.x-esp8266-version",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 440,
        "wires": [
            [
                "0f020c61e3f787a3",
                "1c081a62d5dc1017"
            ]
        ]
    },
    {
        "id": "c7b643c3441508bc",
        "type": "debug",
        "z": "5ced27b547041ccb",
        "name": "Firmware file error",
        "active": false,
        "console": "false",
        "complete": "error",
        "x": 2910,
        "y": 420,
        "wires": []
    },
    {
        "id": "4925436967336ba8",
        "type": "http in",
        "z": "5ced27b547041ccb",
        "name": "OTA Request",
        "url": "/esp8266-ota/update",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 182.440185546875,
        "y": 231.8482208251953,
        "wires": [
            [
                "4e47b8a737c10e83",
                "b5c989558e1a7fe6"
            ]
        ]
    },
    {
        "id": "5529581790d4add2",
        "type": "switch",
        "z": "5ced27b547041ccb",
        "name": "",
        "property": "req.headers.x-esp8266-version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1150,
        "y": 440,
        "wires": [
            [
                "ddc4273451069b78"
            ],
            [
                "9bded789035e7145"
            ]
        ]
    },
    {
        "id": "9bded789035e7145",
        "type": "change",
        "z": "5ced27b547041ccb",
        "name": "Version in Request",
        "rules": [
            {
                "t": "set",
                "p": "req.headers.x-esp8266-version",
                "pt": "msg",
                "to": "req.params.version",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1310,
        "y": 500,
        "wires": [
            [
                "ddc4273451069b78"
            ]
        ]
    },
    {
        "id": "b5c989558e1a7fe6",
        "type": "debug",
        "z": "5ced27b547041ccb",
        "name": "Update req",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 390,
        "y": 180,
        "wires": []
    },
    {
        "id": "71cb7b5f904fc16e",
        "type": "debug",
        "z": "5ced27b547041ccb",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1210,
        "y": 380,
        "wires": []
    },
    {
        "id": "73d06b45c1161e01",
        "type": "debug",
        "z": "5ced27b547041ccb",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1190,
        "y": 320,
        "wires": []
    },
    {
        "id": "1c081a62d5dc1017",
        "type": "debug",
        "z": "5ced27b547041ccb",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "filename",
        "x": 1750,
        "y": 500,
        "wires": []
    },
    {
        "id": "9da0b5fbb29f0a5f",
        "type": "debug",
        "z": "5ced27b547041ccb",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 2010,
        "y": 500,
        "wires": []
    },
    {
        "id": "4c5bbad128181f86",
        "type": "debug",
        "z": "5ced27b547041ccb",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 2050,
        "y": 420,
        "wires": []
    },
    {
        "id": "dbdf3be3e81aab27",
        "type": "debug",
        "z": "5ced27b547041ccb",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 2410,
        "y": 280,
        "wires": []
    },
    {
        "id": "0371852c9cc7caaa",
        "type": "debug",
        "z": "5ced27b547041ccb",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 2410,
        "y": 380,
        "wires": []
    },
    {
        "id": "0f020c61e3f787a3",
        "type": "fs-ops-access",
        "z": "5ced27b547041ccb",
        "name": "Check for MD5 file exists",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 1810,
        "y": 460,
        "wires": [
            [
                "43047216cbdb9c57",
                "4c5bbad128181f86"
            ],
            [
                "10f330726c72e2e3",
                "9da0b5fbb29f0a5f"
            ]
        ]
    },
    {
        "id": "e62a46654691189e",
        "type": "fs-ops-access",
        "z": "5ced27b547041ccb",
        "name": "Check for MD5 file exists",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 990,
        "y": 360,
        "wires": [
            [
                "43047216cbdb9c57",
                "73d06b45c1161e01"
            ],
            [
                "5529581790d4add2",
                "71cb7b5f904fc16e"
            ]
        ]
    },
    {
        "id": "905dc28b76a33d54",
        "type": "config",
        "z": "5ced27b547041ccb",
        "name": "Firmware Config",
        "properties": [
            {
                "p": "firmware.directory",
                "pt": "flow",
                "to": "/home/ubuntu/OTA/",
                "tot": "str"
            }
        ],
        "active": true,
        "x": 440,
        "y": 500,
        "wires": []
    },
    {
        "id": "36782e1228a715b6",
        "type": "httpInMultipart",
        "z": "5ced27b547041ccb",
        "name": "OTA Upload",
        "url": "/esp8266-ota",
        "method": "post",
        "fields": "[{ \"name\": \"firmware\"}]",
        "swaggerDoc": "",
        "x": 190,
        "y": 900,
        "wires": [
            [
                "bae983c044ceaf01"
            ]
        ]
    },
    {
        "id": "cc9df7c75434d763",
        "type": "mqtt in",
        "z": "5ced27b547041ccb",
        "name": "",
        "topic": "II12/ESP3097984/FOTA",
        "qos": "2",
        "datatype": "auto",
        "broker": "759329fc13f505d4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 200,
        "y": 500,
        "wires": [
            [
                "905dc28b76a33d54"
            ]
        ]
    },
    {
        "id": "94d53b4622de4960",
        "type": "file",
        "z": "5ced27b547041ccb",
        "name": "Save md5 Checksum",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1260,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "b6ceae6cba7451f4",
        "type": "file in",
        "z": "5ced27b547041ccb",
        "name": "Read firmware",
        "filename": "",
        "format": "",
        "x": 720,
        "y": 940,
        "wires": [
            [
                "b7789d72a17f948b"
            ]
        ]
    },
    {
        "id": "91ee79d194991b4c",
        "type": "change",
        "z": "5ced27b547041ccb",
        "name": "Extract filename",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.files.firmware[0].originalname",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "req",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "res",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 940,
        "wires": [
            [
                "b6ceae6cba7451f4"
            ]
        ]
    },
    {
        "id": "2963538301674932",
        "type": "change",
        "z": "5ced27b547041ccb",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 940,
        "wires": [
            [
                "94d53b4622de4960"
            ]
        ]
    },
    {
        "id": "e09473ecce15fe8e",
        "type": "template",
        "z": "5ced27b547041ccb",
        "name": "Firmware Manager",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<html>\n    <head>\n        <title>ESP8266 OTA Firmware Manager</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\">\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n        <script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\n        <style>\n            .file-btn-grp {\n                display: none;\n            }\n            body {\n                background-color: #f6f6f6;\n            }\n            .text_holder {\n                display: block;\n                max-width: 100%;\n                word-wrap: break-word;\n                line-height: 30px;\n            }\n            #main {\n                margin-top: 50px;\n                background-color: #ffffff;\n                border-radius: 5px;\n                width: 70%;\n                min-width: 500px;\n                border: 1px solid #545454;\n            }\n            .alert {\n                margin-top: 10px;\n                margin-bottom: 5px;\n            }\n            .link {\n                font-style: italic;\n            }\n            .listentry {\n                display: none;\n                list-style-type: none;\n            }\n        </style>\n\n    </head>\n    <body>\n        <div class=\"container\" id=\"main\">\n            <h1><small>ESP8266 OTA Firmware Manager</small></h1>\n            <h2><small>Upload New Firmware</small></h2>\n\n            <form role =\"form\" id=\"main_input_box\" action=\"esp8266-ota\" method=\"POST\" enctype=\"multipart/form-data\" class=\"form-inline\">\n                <input type=\"file\" accept=\".bin\" class=\"hidden\" id=\"fileUpload\" name=\"firmware\" placeholder=\"firmware.bin\">\n                <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <span class=\"input-group-btn\">\n                        <button id=\"browse\" type=\"button\" class=\"btn btn-primary\">Browse...</button>\n                    </span>\n                    <input id=\"filename\" size=100 readonly=\"\" class=\"form-control\" placeholder=\"Firmware.bin\">\n                    <span class=\"input-group-btn\">\n                        <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary add_button\">\n                    </span>\n                </div>\n                </div>\n            </form>\n\n            <h2><small>Current Firmware</small></h2>\n            <ul class=\"list-group\" id=\"list_of_items\">\n            </ul>\n        </div>\n\n        <div id=\"linkModal\" class=\"modal fade\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n        \n                <!-- Modal content-->\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                        <h4 class=\"modal-title\">Create Symbolic Link</h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form class=\"form-horizontal\" id=\"linkForm\" role=\"form\" action=\"#\" method=\"POST\">\n                            <div class=\"form-group\">\n                                <label class=\"control-label  col-sm-2\" for=\"linkName\">Link:</label> \n                                <div class=\"col-sm-10\">\n                                    <input id=\"linkName\" name=\"linkName\" class=\"form-control\"/>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"control-label  col-sm-2\" for=\"linkFile\">To:</label> \n                                <div class=\"col-sm-10\">\n                                    <input class=\"form-control\" id=\"linkFile\" name=\"linkFile\"/>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"submit\" class=\"btn btn-success link-create\">Create</button>\n                        <button type=\"button\" class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <script>\n\n            var deleteButton = \"<button id='delete' class='btn btn-warning'>Delete</button>\";\n            var linkButton = \"<button id='link' class='btn btn-success'>Link</button>\";\n            var oneButton = \"<div class='file-btn-grp btn-group pull-right'>\" + deleteButton + \"</div>\";\n            var twoButtons = \"<div class='file-btn-grp btn-group pull-right'>\" + deleteButton + linkButton + \"</div>\";\n            \n            function addListEntry(list, filename, linkname) {\n            \n                var entry;\n                \n                if (linkname === undefined) {\n                    entry = $(\"<li class='listentry list-group-item'><div class='text_holder'><span>\" \n                    + filename + \"</span>\" + twoButtons + \"</div></li>\");\n                } else {\n                    entry = $(\"<li class='listentry list-group-item'><div class='text_holder'><span class='link'>\" \n                    + filename + \"</span> <span class='glyphicon glyphicon-arrow-right'></span> \" \n                    + linkname + oneButton + \"</div></li>\");\n                }\n                \n                entry.mouseover(function(){\n                    $(this).find(\".btn-group\").fadeIn(\"fast\");\n                });\n                entry.mouseleave(function(){\n                    $(this).find(\".btn-group\").fadeOut(\"slow\");\n                });\n                \n                entry.on(\"click\", \"button#delete\", function(){\n                    var listItem = this.parentElement.parentElement.parentElement;\n                    var file = this.parentElement.parentElement.childNodes[0].childNodes[0].data;\n                    $.ajax({\n                        type: 'DELETE',\n                        data: {\"filename\": file},\n                        success: function(result) {\n                            $(listItem).fadeOut(\"slow\", function(){\n                                listItem.remove();\n                            });\n                        },\n                        error: function(result) {\n                            $(listItem).append(\"<div class='alert alert-danger'>\"\n                                + \"<a href='#' class='close' data-dismiss='alert'\"\n                                + \"aria-label='close'>&times;</a>\"\n                                + result.responseText + \"</div>\");\n                        }\n                    });\n                });\n           \n                entry.on(\"click\", \"button#link\", function(){\n                    var file = this.parentElement.parentElement.childNodes[0].childNodes[0].data;\n                    $(\"#linkName\").val(\"\");\n                    $(\"#linkFile\").prop(\"disabled\", true).val(file);\n                    $(\"#linkName\").parent().removeClass(\"has-error\");\n                    $(\"#linkModal\").modal();\n                    $('#linkModal').on('shown.bs.modal', function () {\n                        $('#linkName').focus();\n                    });\n                });\n                \n                if (list.children().length == 0) {\n                    list.append(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n\n                if (filename < $(\"li:first span:first\", list).text()) {\n                    $(\"li:first\", list).before(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n                if (filename > $(\"li:last span:first\", list).text()) {\n                    $(\"li:last\", list).after(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n                \n                var count = 0;\n                var $li = $(\"li\", list);\n                do {\n                    var index = parseInt($li.length / 2);\n                    var $compare = $li.eq(index);\n                    var compare = $(\"span:first\",$compare).text();\n                    if (filename === compare) {\n                        break;\n                    }\n                    else if (filename > compare) {\n                        $li = $li.slice(index, $li.length);\n                    } else {\n                        $li = $li.slice(0, index);\n                    }\n                } while ($li.length > 1);\n\n                if (filename === compare) {\n                    $compare.slideUp(\"fast\").slideDown(\"slow\");\n                    return;\n                } else if (filename < compare) { \n                    entry.insertBefore($compare); \n                } else { \n                    entry.insertAfter($compare); \n                }\n                entry.slideDown(\"slow\");\n            }\n            \n            \n            var files = String(\"{{payload.files}}\").split(',');\n            var links = String(\"{{payload.links}}\").split(',');\n            \n            var list_of_items = $(\"#list_of_items\");\n            \n            files.forEach(function(file,index) {\n                if (links[index] == \"\") {\n                    addListEntry(this, file.slice(0,-4));\n                } else {\n                    addListEntry(this, file.slice(0,-4), links[index].slice(0,-4));\n                }\n            },list_of_items);\n           \n           \n            $(\"#linkModal\").on(\"click\", \"button.link-create\", function(event){\n               event.preventDefault();\n               if ($(\"#linkName\").val() == \"\") {\n                    $('#linkName').focus();\n                    $('#linkName').parent().addClass(\"has-error\");\n                    return false;\n               }\n               $(\"#linkFile\").prop(\"disabled\",false);               \n               $.ajax({\n                    type: 'PUT',\n                    data: $(\"#linkForm\").serialize(),\n                    success: function(result) {\n                        $(\"#linkModal\").modal('hide');\n                        addListEntry(list_of_items, $('#linkName').val(), $('#linkFile').val());\n                    },\n                    error: function(result) {\n                        $(\"#linkFile\").prop(\"disabled\", true);\n                        $('#linkName').focus();\n                        $('#linkName').parent().addClass(\"has-error\");\n                        $(linkForm).append(\"<div id='linkError' class='alert alert-danger'>\"\n                             + \"<a href='#' class='close' data-dismiss='alert'\"\n                             + \"aria-label='close'>&times;</a>\"\n                             + result.responseText + \"</div>\");\n                    }\n                });\n            });\n            \n            $(\"#browse\").on('click', function () {\n                fileUpload.click();\n            });\n            \n            $(\"#fileUpload\").on('change', function () {\n                $(\"#filename\").val($(\"#fileUpload\").val().split('/').pop().split('\\\\').pop());\n            });\n            \n            var frm = $(\"#main_input_box\");\n            \n            frm.submit( function( e ) {\n                e.preventDefault();\n                if ($('#fileUpload').val() == \"\") return null;\n                $.ajax( {\n                    url: frm.attr('action'),\n                    type: frm.attr('method'),\n                    data: new FormData( this ),\n                    processData: false,\n                    contentType: false,\n                    success: function(result) {\n                        addListEntry(list_of_items, $('#fileUpload').val().slice(0,-4).split('\\\\').pop());\n                        $('#fileUpload').val('');\n                        $(':text').val('');\n                    },\n                    error: function(result) {\n                        $(\"#main_input_box\").append(\"<div class='alert alert-danger'>\"\n                             + \"<a href='#' class='close' data-dismiss='alert'\"\n                             + \"aria-label='close'>&times;</a>\"\n                             + result.responseText + \"</div>\");\n                    }\n\n                });\n            });\n        </script>\n    </body>\n</html>",
        "output": "str",
        "x": 690,
        "y": 760,
        "wires": [
            [
                "f47e74964413dcce"
            ]
        ]
    },
    {
        "id": "b2ab463562688611",
        "type": "catch",
        "z": "5ced27b547041ccb",
        "name": "File Error",
        "scope": [
            "11b2954581390f77",
            "41585f97aaaf30b7",
            "7f560952e07f329b",
            "d253343c9cc3ab18",
            "bae983c044ceaf01"
        ],
        "x": 1260,
        "y": 800,
        "wires": [
            [
                "0b97b1ca66512342"
            ]
        ]
    },
    {
        "id": "0b97b1ca66512342",
        "type": "change",
        "z": "5ced27b547041ccb",
        "name": "Error",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "500",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 800,
        "wires": [
            [
                "f47e74964413dcce"
            ]
        ]
    },
    {
        "id": "b38d9612008dd9dc",
        "type": "change",
        "z": "5ced27b547041ccb",
        "name": "Change to MD5 filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.filename",
                "pt": "msg",
                "from": "bin",
                "fromt": "str",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 1040,
        "wires": [
            [
                "41585f97aaaf30b7"
            ]
        ]
    },
    {
        "id": "dad4c75ab287e1f3",
        "type": "change",
        "z": "5ced27b547041ccb",
        "name": "Extract filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.linkName",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.linkFile",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1140,
        "wires": [
            [
                "7f560952e07f329b"
            ]
        ]
    },
    {
        "id": "010ce58de5608036",
        "type": "change",
        "z": "5ced27b547041ccb",
        "name": "Change to MD5 Filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.linkName",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.linkFile",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 1140,
        "wires": [
            [
                "d253343c9cc3ab18"
            ]
        ]
    },
    {
        "id": "5d76193305b99452",
        "type": "change",
        "z": "5ced27b547041ccb",
        "name": "Extract filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1040,
        "wires": [
            [
                "11b2954581390f77"
            ]
        ]
    },
    {
        "id": "bae983c044ceaf01",
        "type": "fs-ops-move",
        "z": "5ced27b547041ccb",
        "name": "Store firmware",
        "sourcePath": "req.files.firmware[0].destination",
        "sourcePathType": "msg",
        "sourceFilename": "req.files.firmware[0].filename",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "flow",
        "destFilename": "req.files.firmware[0].originalname",
        "destFilenameType": "msg",
        "link": false,
        "x": 360,
        "y": 900,
        "wires": [
            [
                "91ee79d194991b4c",
                "f47e74964413dcce"
            ]
        ]
    },
    {
        "id": "7f560952e07f329b",
        "type": "fs-ops-move",
        "z": "5ced27b547041ccb",
        "name": "Link firmware",
        "sourcePath": "",
        "sourcePathType": "str",
        "sourceFilename": "payload.linkFile",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "flow",
        "destFilename": "payload.linkName",
        "destFilenameType": "msg",
        "link": true,
        "x": 530,
        "y": 1140,
        "wires": [
            [
                "010ce58de5608036"
            ]
        ]
    },
    {
        "id": "d253343c9cc3ab18",
        "type": "fs-ops-move",
        "z": "5ced27b547041ccb",
        "name": "Link MD5",
        "sourcePath": "",
        "sourcePathType": "str",
        "sourceFilename": "payload.linkFile",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "flow",
        "destFilename": "payload.linkName",
        "destFilenameType": "msg",
        "link": true,
        "x": 920,
        "y": 1140,
        "wires": [
            [
                "f47e74964413dcce"
            ]
        ]
    },
    {
        "id": "11b2954581390f77",
        "type": "fs-ops-delete",
        "z": "5ced27b547041ccb",
        "name": "Delete firmware",
        "path": "firmware.directory",
        "pathType": "flow",
        "filename": "payload.filename",
        "filenameType": "msg",
        "x": 540,
        "y": 1040,
        "wires": [
            [
                "b38d9612008dd9dc"
            ]
        ]
    },
    {
        "id": "41585f97aaaf30b7",
        "type": "fs-ops-delete",
        "z": "5ced27b547041ccb",
        "name": "Delete MD5 Hash",
        "path": "firmware.directory",
        "pathType": "flow",
        "filename": "payload.filename",
        "filenameType": "msg",
        "x": 970,
        "y": 1040,
        "wires": [
            [
                "f47e74964413dcce"
            ]
        ]
    },
    {
        "id": "6b4a10b31cf6e19a",
        "type": "fs-ops-link",
        "z": "5ced27b547041ccb",
        "name": "Get Links",
        "path": "firmware.directory",
        "pathType": "flow",
        "filename": "payload.files",
        "filenameType": "msg",
        "link": "payload.links",
        "linkType": "msg",
        "x": 520,
        "y": 760,
        "wires": [
            [
                "e09473ecce15fe8e"
            ]
        ]
    },
    {
        "id": "7306d47ed3f462ee",
        "type": "fs-ops-dir",
        "z": "5ced27b547041ccb",
        "name": "Firmware listing",
        "path": "firmware.directory",
        "pathType": "flow",
        "filter": "*.bin",
        "filterType": "str",
        "dir": "payload.files",
        "dirType": "msg",
        "x": 360,
        "y": 760,
        "wires": [
            [
                "6b4a10b31cf6e19a"
            ]
        ]
    },
    {
        "id": "b7789d72a17f948b",
        "type": "md5",
        "z": "5ced27b547041ccb",
        "name": "",
        "fieldToHash": "payload",
        "hashField": "payload",
        "hashFieldType": "msg",
        "x": 870,
        "y": 940,
        "wires": [
            [
                "2963538301674932"
            ]
        ]
    },
    {
        "id": "759329fc13f505d4",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    }
]
