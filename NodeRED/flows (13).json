[
    {
        "id": "728fd9e8064d0b16",
        "type": "tab",
        "label": "FOTA",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c0b1a65866f77831",
        "type": "http response",
        "z": "728fd9e8064d0b16",
        "name": "OTA Response",
        "statusCode": "",
        "headers": {},
        "x": 2772.559814453125,
        "y": 663.1071910858154,
        "wires": []
    },
    {
        "id": "0c3a61e50bc2cd1e",
        "type": "http in",
        "z": "728fd9e8064d0b16",
        "name": "OTA Manager",
        "url": "/esp8266-ota",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 88.05558013916016,
        "y": 648.2856712341309,
        "wires": [
            [
                "7b9ad065dacf242b"
            ]
        ]
    },
    {
        "id": "c5330dc96fd857fe",
        "type": "file",
        "z": "728fd9e8064d0b16",
        "name": "Save md5 Checksum",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "x": 1539.9998168945312,
        "y": 845.8333740234375,
        "wires": [
            []
        ]
    },
    {
        "id": "6ccbe86c09887041",
        "type": "file in",
        "z": "728fd9e8064d0b16",
        "name": "Read firmware",
        "filename": "",
        "format": "",
        "x": 842.0833740234375,
        "y": 846.6666870117188,
        "wires": [
            [
                "a4fc239dc03387f4"
            ]
        ]
    },
    {
        "id": "8e5d8ddb206a7c3e",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "Extract filename",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.files.firmware[0].originalname",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "req",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "res",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 619.375,
        "y": 847.9166870117188,
        "wires": [
            [
                "6ccbe86c09887041"
            ]
        ]
    },
    {
        "id": "c1e6a8209eb393be",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1225.625,
        "y": 846.25,
        "wires": [
            [
                "c5330dc96fd857fe"
            ]
        ]
    },
    {
        "id": "65b19b2ea16827cd",
        "type": "comment",
        "z": "728fd9e8064d0b16",
        "name": "Firmware Upgrade",
        "info": "The system determines which firmware to send based\non the MAC address, version, and MD5 headers in the\nrequest from the ESP8266.\n\nFirstly, it checks if a firmware hash file with \nthe MAC address as the name exists, or else if a \nfirmware file with the version as the name exists.\nIf neither exist then no update is available.\n\nIt then reads the corresponding MD5 hash from the\nhash file and compares to the MD5 hash in the\nrequest.  If they match then the firmware is up\nto date and no update is required.\n\nOtherwise, it sends the contents of the firmware\nbin file and the MD5 hash value.",
        "x": 103.5,
        "y": 46,
        "wires": []
    },
    {
        "id": "cecd27683ab65649",
        "type": "comment",
        "z": "728fd9e8064d0b16",
        "name": "Firmware Management",
        "info": "",
        "x": 110.5,
        "y": 542,
        "wires": []
    },
    {
        "id": "9fb0d9f0ec46d1dd",
        "type": "template",
        "z": "728fd9e8064d0b16",
        "name": "Firmware Manager",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<html>\n    <head>\n        <title>ESP8266 OTA Firmware Manager</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <link rel=\"stylesheet\" href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\">\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n        <script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\n        <style>\n            .file-btn-grp {\n                display: none;\n            }\n            body {\n                background-color: #f6f6f6;\n            }\n            .text_holder {\n                display: block;\n                max-width: 100%;\n                word-wrap: break-word;\n                line-height: 30px;\n            }\n            #main {\n                margin-top: 50px;\n                background-color: #ffffff;\n                border-radius: 5px;\n                width: 70%;\n                min-width: 500px;\n                border: 1px solid #545454;\n            }\n            .alert {\n                margin-top: 10px;\n                margin-bottom: 5px;\n            }\n            .link {\n                font-style: italic;\n            }\n            .listentry {\n                display: none;\n                list-style-type: none;\n            }\n        </style>\n\n    </head>\n    <body>\n        <div class=\"container\" id=\"main\">\n            <h1><small>ESP8266 OTA Firmware Manager</small></h1>\n            <h2><small>Upload New Firmware</small></h2>\n\n            <form role =\"form\" id=\"main_input_box\" action=\"esp8266-ota\" method=\"POST\" enctype=\"multipart/form-data\" class=\"form-inline\">\n                <input type=\"file\" accept=\".bin\" class=\"hidden\" id=\"fileUpload\" name=\"firmware\" placeholder=\"firmware.bin\">\n                <div class=\"form-group\">\n                <div class=\"input-group\">\n                    <span class=\"input-group-btn\">\n                        <button id=\"browse\" type=\"button\" class=\"btn btn-primary\">Browse...</button>\n                    </span>\n                    <input id=\"filename\" size=100 readonly=\"\" class=\"form-control\" placeholder=\"Firmware.bin\">\n                    <span class=\"input-group-btn\">\n                        <input type=\"submit\" value=\"Upload\" class=\"btn btn-primary add_button\">\n                    </span>\n                </div>\n                </div>\n            </form>\n\n            <h2><small>Current Firmware</small></h2>\n            <ul class=\"list-group\" id=\"list_of_items\">\n            </ul>\n        </div>\n\n        <div id=\"linkModal\" class=\"modal fade\" role=\"dialog\">\n            <div class=\"modal-dialog\">\n        \n                <!-- Modal content-->\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                        <h4 class=\"modal-title\">Create Symbolic Link</h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form class=\"form-horizontal\" id=\"linkForm\" role=\"form\" action=\"#\" method=\"POST\">\n                            <div class=\"form-group\">\n                                <label class=\"control-label  col-sm-2\" for=\"linkName\">Link:</label> \n                                <div class=\"col-sm-10\">\n                                    <input id=\"linkName\" name=\"linkName\" class=\"form-control\"/>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label class=\"control-label  col-sm-2\" for=\"linkFile\">To:</label> \n                                <div class=\"col-sm-10\">\n                                    <input class=\"form-control\" id=\"linkFile\" name=\"linkFile\"/>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"submit\" class=\"btn btn-success link-create\">Create</button>\n                        <button type=\"button\" class=\"btn btn-warning\" data-dismiss=\"modal\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <script>\n\n            var deleteButton = \"<button id='delete' class='btn btn-warning'>Delete</button>\";\n            var linkButton = \"<button id='link' class='btn btn-success'>Link</button>\";\n            var oneButton = \"<div class='file-btn-grp btn-group pull-right'>\" + deleteButton + \"</div>\";\n            var twoButtons = \"<div class='file-btn-grp btn-group pull-right'>\" + deleteButton + linkButton + \"</div>\";\n            \n            function addListEntry(list, filename, linkname) {\n            \n                var entry;\n                \n                if (linkname === undefined) {\n                    entry = $(\"<li class='listentry list-group-item'><div class='text_holder'><span>\" \n                    + filename + \"</span>\" + twoButtons + \"</div></li>\");\n                } else {\n                    entry = $(\"<li class='listentry list-group-item'><div class='text_holder'><span class='link'>\" \n                    + filename + \"</span> <span class='glyphicon glyphicon-arrow-right'></span> \" \n                    + linkname + oneButton + \"</div></li>\");\n                }\n                \n                entry.mouseover(function(){\n                    $(this).find(\".btn-group\").fadeIn(\"fast\");\n                });\n                entry.mouseleave(function(){\n                    $(this).find(\".btn-group\").fadeOut(\"slow\");\n                });\n                \n                entry.on(\"click\", \"button#delete\", function(){\n                    var listItem = this.parentElement.parentElement.parentElement;\n                    var file = this.parentElement.parentElement.childNodes[0].childNodes[0].data;\n                    $.ajax({\n                        type: 'DELETE',\n                        data: {\"filename\": file},\n                        success: function(result) {\n                            $(listItem).fadeOut(\"slow\", function(){\n                                listItem.remove();\n                            });\n                        },\n                        error: function(result) {\n                            $(listItem).append(\"<div class='alert alert-danger'>\"\n                                + \"<a href='#' class='close' data-dismiss='alert'\"\n                                + \"aria-label='close'>&times;</a>\"\n                                + result.responseText + \"</div>\");\n                        }\n                    });\n                });\n           \n                entry.on(\"click\", \"button#link\", function(){\n                    var file = this.parentElement.parentElement.childNodes[0].childNodes[0].data;\n                    $(\"#linkName\").val(\"\");\n                    $(\"#linkFile\").prop(\"disabled\", true).val(file);\n                    $(\"#linkName\").parent().removeClass(\"has-error\");\n                    $(\"#linkModal\").modal();\n                    $('#linkModal').on('shown.bs.modal', function () {\n                        $('#linkName').focus();\n                    });\n                });\n                \n                if (list.children().length == 0) {\n                    list.append(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n\n                if (filename < $(\"li:first span:first\", list).text()) {\n                    $(\"li:first\", list).before(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n                if (filename > $(\"li:last span:first\", list).text()) {\n                    $(\"li:last\", list).after(entry);\n                    entry.fadeIn(\"slow\");\n                    return;\n                }\n                \n                var count = 0;\n                var $li = $(\"li\", list);\n                do {\n                    var index = parseInt($li.length / 2);\n                    var $compare = $li.eq(index);\n                    var compare = $(\"span:first\",$compare).text();\n                    if (filename === compare) {\n                        break;\n                    }\n                    else if (filename > compare) {\n                        $li = $li.slice(index, $li.length);\n                    } else {\n                        $li = $li.slice(0, index);\n                    }\n                } while ($li.length > 1);\n\n                if (filename === compare) {\n                    $compare.slideUp(\"fast\").slideDown(\"slow\");\n                    return;\n                } else if (filename < compare) { \n                    entry.insertBefore($compare); \n                } else { \n                    entry.insertAfter($compare); \n                }\n                entry.slideDown(\"slow\");\n            }\n            \n            \n            var files = String(\"{{payload.files}}\").split(',');\n            var links = String(\"{{payload.links}}\").split(',');\n            \n            var list_of_items = $(\"#list_of_items\");\n            \n            files.forEach(function(file,index) {\n                if (links[index] == \"\") {\n                    addListEntry(this, file.slice(0,-4));\n                } else {\n                    addListEntry(this, file.slice(0,-4), links[index].slice(0,-4));\n                }\n            },list_of_items);\n           \n           \n            $(\"#linkModal\").on(\"click\", \"button.link-create\", function(event){\n               event.preventDefault();\n               if ($(\"#linkName\").val() == \"\") {\n                    $('#linkName').focus();\n                    $('#linkName').parent().addClass(\"has-error\");\n                    return false;\n               }\n               $(\"#linkFile\").prop(\"disabled\",false);               \n               $.ajax({\n                    type: 'PUT',\n                    data: $(\"#linkForm\").serialize(),\n                    success: function(result) {\n                        $(\"#linkModal\").modal('hide');\n                        addListEntry(list_of_items, $('#linkName').val(), $('#linkFile').val());\n                    },\n                    error: function(result) {\n                        $(\"#linkFile\").prop(\"disabled\", true);\n                        $('#linkName').focus();\n                        $('#linkName').parent().addClass(\"has-error\");\n                        $(linkForm).append(\"<div id='linkError' class='alert alert-danger'>\"\n                             + \"<a href='#' class='close' data-dismiss='alert'\"\n                             + \"aria-label='close'>&times;</a>\"\n                             + result.responseText + \"</div>\");\n                    }\n                });\n            });\n            \n            $(\"#browse\").on('click', function () {\n                fileUpload.click();\n            });\n            \n            $(\"#fileUpload\").on('change', function () {\n                $(\"#filename\").val($(\"#fileUpload\").val().split('/').pop().split('\\\\').pop());\n            });\n            \n            var frm = $(\"#main_input_box\");\n            \n            frm.submit( function( e ) {\n                e.preventDefault();\n                if ($('#fileUpload').val() == \"\") return null;\n                $.ajax( {\n                    url: frm.attr('action'),\n                    type: frm.attr('method'),\n                    data: new FormData( this ),\n                    processData: false,\n                    contentType: false,\n                    success: function(result) {\n                        addListEntry(list_of_items, $('#fileUpload').val().slice(0,-4).split('\\\\').pop());\n                        $('#fileUpload').val('');\n                        $(':text').val('');\n                    },\n                    error: function(result) {\n                        $(\"#main_input_box\").append(\"<div class='alert alert-danger'>\"\n                             + \"<a href='#' class='close' data-dismiss='alert'\"\n                             + \"aria-label='close'>&times;</a>\"\n                             + result.responseText + \"</div>\");\n                    }\n\n                });\n            });\n        </script>\n    </body>\n</html>",
        "output": "str",
        "x": 1381.3333740234375,
        "y": 645.8135375976562,
        "wires": [
            [
                "c0b1a65866f77831"
            ]
        ]
    },
    {
        "id": "fe75cf49d0c7e310",
        "type": "http in",
        "z": "728fd9e8064d0b16",
        "name": "OTA Delete",
        "url": "/esp8266-ota",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 83.125,
        "y": 933.75,
        "wires": [
            [
                "4bf95cce7b270d4f"
            ]
        ]
    },
    {
        "id": "3d2b65548a714976",
        "type": "catch",
        "z": "728fd9e8064d0b16",
        "name": "File Error",
        "scope": [
            "91b1647cc213bef8",
            "3507e9e0016c7b1c",
            "eabd22fd115df1a0",
            "64acaa2a3da0bf4c",
            "9c96172e21bdfaec"
        ],
        "x": 1870.6665573120117,
        "y": 805.3333158493042,
        "wires": [
            [
                "8ed713f5b93288bd"
            ]
        ]
    },
    {
        "id": "8ed713f5b93288bd",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "Error",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "500",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error.message",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2159,
        "y": 791,
        "wires": [
            [
                "c0b1a65866f77831"
            ]
        ]
    },
    {
        "id": "61b51ce2170a8569",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "Change to MD5 filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.filename",
                "pt": "msg",
                "from": "bin",
                "fromt": "str",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1879.1666564941406,
        "y": 936.6666269302368,
        "wires": [
            [
                "3507e9e0016c7b1c"
            ]
        ]
    },
    {
        "id": "242f640405e8b8f8",
        "type": "http in",
        "z": "728fd9e8064d0b16",
        "name": "OTA Link",
        "url": "/esp8266-ota",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 84,
        "y": 1041.5,
        "wires": [
            [
                "bd3902a350af5392"
            ]
        ]
    },
    {
        "id": "bd3902a350af5392",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "Extract filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.linkName",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.linkFile",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1385,
        "y": 1044,
        "wires": [
            [
                "eabd22fd115df1a0"
            ]
        ]
    },
    {
        "id": "12dd742e8a556efa",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "Change to MD5 Filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.linkName",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload.linkFile",
                "pt": "msg",
                "from": "bin$",
                "fromt": "re",
                "to": "md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1908,
        "y": 1045,
        "wires": [
            [
                "64acaa2a3da0bf4c"
            ]
        ]
    },
    {
        "id": "4bf95cce7b270d4f",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "Extract filename",
        "rules": [
            {
                "t": "change",
                "p": "payload.filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1382.5,
        "y": 937.5,
        "wires": [
            [
                "91b1647cc213bef8"
            ]
        ]
    },
    {
        "id": "a2b16ba445e12e6e",
        "type": "http response",
        "z": "728fd9e8064d0b16",
        "name": "OTA Response",
        "x": 3210.059814453125,
        "y": 366.06256103515625,
        "wires": []
    },
    {
        "id": "d1de95db66fc3fa9",
        "type": "file in",
        "z": "728fd9e8064d0b16",
        "name": "Load Firmware",
        "filename": "",
        "format": "",
        "sendError": false,
        "x": 2586.999786376953,
        "y": 399.88400077819824,
        "wires": [
            [
                "a2b16ba445e12e6e",
                "1528ef603392e933"
            ]
        ]
    },
    {
        "id": "d1fe45066b9bcf6f",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "No Update",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "304",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2956.107421875,
        "y": 258.52682304382324,
        "wires": [
            [
                "a2b16ba445e12e6e"
            ]
        ]
    },
    {
        "id": "9a26542c68e44c5d",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "Forbidden",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "403",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Forbidden",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2933.999755859375,
        "y": 135.84826469421387,
        "wires": [
            [
                "a2b16ba445e12e6e"
            ]
        ]
    },
    {
        "id": "1528ef603392e933",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "Update sent",
        "active": true,
        "console": "false",
        "complete": "req.headers.x-esp8266-sta-mac",
        "x": 2932.0000610351562,
        "y": 405.955472946167,
        "wires": []
    },
    {
        "id": "eaf13d08e5d594e3",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "Save MD5 Hash",
        "rules": [
            {
                "t": "set",
                "p": "headers.x-MD5",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "md5",
                "fromt": "str",
                "to": "bin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2375.785789489746,
        "y": 387.0268669128418,
        "wires": [
            [
                "d1de95db66fc3fa9"
            ]
        ]
    },
    {
        "id": "ec4b1c767742bb44",
        "type": "switch",
        "z": "728fd9e8064d0b16",
        "name": "Update type",
        "property": "req.headers.x-esp8266-mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "spiffs",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sketch",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 474.5179748535156,
        "y": 228.52685356140137,
        "wires": [
            [
                "d1fe45066b9bcf6f"
            ],
            [
                "b302b465bbcd376c"
            ]
        ]
    },
    {
        "id": "2342ba5a72574419",
        "type": "switch",
        "z": "728fd9e8064d0b16",
        "name": "Compare MD5 hash",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "req.headers.x-esp8266-sketch-md5",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 1945.41064453125,
        "y": 342.13403129577637,
        "wires": [
            [
                "d1fe45066b9bcf6f",
                "9311cf0e36c5e22f"
            ],
            [
                "eaf13d08e5d594e3",
                "f75f5cef391a6703"
            ]
        ]
    },
    {
        "id": "d4081e7e5db1bf9f",
        "type": "catch",
        "z": "728fd9e8064d0b16",
        "name": "File error",
        "scope": [
            "d1de95db66fc3fa9",
            "6b14f0156c40c345"
        ],
        "x": 2628.3572387695312,
        "y": 348.52682304382324,
        "wires": [
            [
                "d1fe45066b9bcf6f",
                "d59687aadf36180e"
            ]
        ]
    },
    {
        "id": "775fa7a377db1267",
        "type": "switch",
        "z": "728fd9e8064d0b16",
        "name": "Check user agent",
        "property": "req.headers.user-agent",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "ESP8266-http-Update",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "outputs": 2,
        "x": 311.21436309814453,
        "y": 134.95541191101074,
        "wires": [
            [
                "9a26542c68e44c5d"
            ],
            [
                "ec4b1c767742bb44"
            ]
        ]
    },
    {
        "id": "b302b465bbcd376c",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "Get MAC hash filename",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.headers.x-esp8266-sta-mac",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 703.6428451538086,
        "y": 354.9554100036621,
        "wires": [
            [
                "ac9fe70b6e323abc"
            ]
        ]
    },
    {
        "id": "6b14f0156c40c345",
        "type": "file in",
        "z": "728fd9e8064d0b16",
        "name": "Load Hash",
        "filename": "",
        "format": "utf8",
        "sendError": false,
        "x": 1734.410629272461,
        "y": 341.7768840789795,
        "wires": [
            [
                "2342ba5a72574419"
            ]
        ]
    },
    {
        "id": "75bd393650af9497",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "Get Version hash filename",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "firmware.directory",
                "tot": "flow"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": "req.headers.x-esp8266-version",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "$",
                "fromt": "re",
                "to": ".md5",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1183.7857666015625,
        "y": 459.5982036590576,
        "wires": [
            [
                "fc6c1f06735b82eb",
                "7d61bac907300993"
            ]
        ]
    },
    {
        "id": "d59687aadf36180e",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "Firmware file error",
        "active": false,
        "console": "false",
        "complete": "error",
        "x": 2891.2142944335938,
        "y": 347.09826469421387,
        "wires": []
    },
    {
        "id": "6e35f7b88aed67f7",
        "type": "http in",
        "z": "728fd9e8064d0b16",
        "name": "OTA Request",
        "url": "/esp8266-ota/update",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 75,
        "y": 134.95541191101074,
        "wires": [
            [
                "775fa7a377db1267",
                "2b23a8906dd34367"
            ]
        ]
    },
    {
        "id": "7d9d862cb57f6af3",
        "type": "switch",
        "z": "728fd9e8064d0b16",
        "name": "",
        "property": "req.headers.x-esp8266-version",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 687.4642333984375,
        "y": 466.74108695983887,
        "wires": [
            [
                "75bd393650af9497"
            ],
            [
                "d8ba17643c46b6fe"
            ]
        ]
    },
    {
        "id": "d8ba17643c46b6fe",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "Version in Request",
        "rules": [
            {
                "t": "set",
                "p": "req.headers.x-esp8266-version",
                "pt": "msg",
                "to": "req.params.version",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 896.9285278320312,
        "y": 532.8125286102295,
        "wires": [
            [
                "75bd393650af9497"
            ]
        ]
    },
    {
        "id": "2b23a8906dd34367",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "Update req",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 246.2144012451172,
        "y": 235.66967582702637,
        "wires": []
    },
    {
        "id": "7e20d120e63ac49d",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1291.773494720459,
        "y": 382.1797161102295,
        "wires": []
    },
    {
        "id": "f01885ee3299979b",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1315.0234375,
        "y": 294.0390625,
        "wires": []
    },
    {
        "id": "7d61bac907300993",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "filename",
        "x": 1393.0234375,
        "y": 555.0390625,
        "wires": []
    },
    {
        "id": "8944446fca6fa334",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 1770.0234375,
        "y": 524.0390625,
        "wires": []
    },
    {
        "id": "f86516efbf76ef28",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 1789.0234375,
        "y": 407.0390625,
        "wires": []
    },
    {
        "id": "9311cf0e36c5e22f",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 2148.0234375,
        "y": 279.0390625,
        "wires": []
    },
    {
        "id": "f75f5cef391a6703",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "filename",
        "x": 2170.0234375,
        "y": 506.0390625,
        "wires": []
    },
    {
        "id": "9c96172e21bdfaec",
        "type": "fs-ops-move",
        "z": "728fd9e8064d0b16",
        "name": "Store firmware",
        "sourcePath": "req.files.firmware[0].destination",
        "sourcePathType": "msg",
        "sourceFilename": "req.files.firmware[0].filename",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "flow",
        "destFilename": "req.files.firmware[0].originalname",
        "destFilenameType": "msg",
        "link": false,
        "x": 365.89284896850586,
        "y": 818.3332557678223,
        "wires": [
            [
                "8e5d8ddb206a7c3e",
                "c0b1a65866f77831"
            ]
        ]
    },
    {
        "id": "eabd22fd115df1a0",
        "type": "fs-ops-move",
        "z": "728fd9e8064d0b16",
        "name": "Link firmware",
        "sourcePath": "",
        "sourcePathType": "str",
        "sourceFilename": "payload.linkFile",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "flow",
        "destFilename": "payload.linkName",
        "destFilenameType": "msg",
        "link": true,
        "x": 1644.5,
        "y": 1044,
        "wires": [
            [
                "12dd742e8a556efa"
            ]
        ]
    },
    {
        "id": "64acaa2a3da0bf4c",
        "type": "fs-ops-move",
        "z": "728fd9e8064d0b16",
        "name": "Link MD5",
        "sourcePath": "",
        "sourcePathType": "str",
        "sourceFilename": "payload.linkFile",
        "sourceFilenameType": "msg",
        "destPath": "firmware.directory",
        "destPathType": "flow",
        "destFilename": "payload.linkName",
        "destFilenameType": "msg",
        "link": true,
        "x": 2152.5,
        "y": 1044,
        "wires": [
            [
                "c0b1a65866f77831"
            ]
        ]
    },
    {
        "id": "91b1647cc213bef8",
        "type": "fs-ops-delete",
        "z": "728fd9e8064d0b16",
        "name": "Delete firmware",
        "path": "firmware.directory",
        "pathType": "flow",
        "filename": "payload.filename",
        "filenameType": "msg",
        "x": 1628.6250457763672,
        "y": 936.5832777023315,
        "wires": [
            [
                "61b51ce2170a8569"
            ]
        ]
    },
    {
        "id": "3507e9e0016c7b1c",
        "type": "fs-ops-delete",
        "z": "728fd9e8064d0b16",
        "name": "Delete MD5 Hash",
        "path": "firmware.directory",
        "pathType": "flow",
        "filename": "payload.filename",
        "filenameType": "msg",
        "x": 2170.833206176758,
        "y": 936.6665878295898,
        "wires": [
            [
                "c0b1a65866f77831"
            ]
        ]
    },
    {
        "id": "fc6c1f06735b82eb",
        "type": "fs-ops-access",
        "z": "728fd9e8064d0b16",
        "name": "Check for MD5 file exists",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 1497.2857055664062,
        "y": 459.6696147918701,
        "wires": [
            [
                "6b14f0156c40c345",
                "f86516efbf76ef28"
            ],
            [
                "d1fe45066b9bcf6f",
                "8944446fca6fa334"
            ]
        ]
    },
    {
        "id": "ac9fe70b6e323abc",
        "type": "fs-ops-access",
        "z": "728fd9e8064d0b16",
        "name": "Check for MD5 file exists",
        "path": "",
        "pathType": "str",
        "filename": "filename",
        "filenameType": "msg",
        "read": true,
        "write": false,
        "throwerror": false,
        "x": 990,
        "y": 340,
        "wires": [
            [
                "6b14f0156c40c345",
                "f01885ee3299979b"
            ],
            [
                "7d9d862cb57f6af3",
                "7e20d120e63ac49d"
            ]
        ]
    },
    {
        "id": "5bce945eb77c913b",
        "type": "fs-ops-link",
        "z": "728fd9e8064d0b16",
        "name": "Get Links",
        "path": "firmware.directory",
        "pathType": "flow",
        "filename": "payload.files",
        "filenameType": "msg",
        "link": "payload.links",
        "linkType": "msg",
        "x": 776.4999923706055,
        "y": 648.3333110809326,
        "wires": [
            [
                "9fb0d9f0ec46d1dd"
            ]
        ]
    },
    {
        "id": "7b9ad065dacf242b",
        "type": "fs-ops-dir",
        "z": "728fd9e8064d0b16",
        "name": "Firmware listing",
        "path": "firmware.directory",
        "pathType": "flow",
        "filter": "*.bin",
        "filterType": "str",
        "dir": "payload.files",
        "dirType": "msg",
        "x": 493.0355987548828,
        "y": 647.8015928268433,
        "wires": [
            [
                "5bce945eb77c913b"
            ]
        ]
    },
    {
        "id": "a4fc239dc03387f4",
        "type": "md5",
        "z": "728fd9e8064d0b16",
        "name": "",
        "fieldToHash": "payload",
        "hashField": "payload",
        "hashFieldType": "msg",
        "x": 1031.6668090820312,
        "y": 846.6666259765625,
        "wires": [
            [
                "c1e6a8209eb393be"
            ]
        ]
    },
    {
        "id": "25ed2143b6ba88e6",
        "type": "config",
        "z": "728fd9e8064d0b16",
        "name": "Firmware Config",
        "properties": [
            {
                "p": "firmware.directory",
                "pt": "flow",
                "to": "/home/ubuntu/OTA/",
                "tot": "str"
            }
        ],
        "active": true,
        "x": 360,
        "y": 400,
        "wires": []
    },
    {
        "id": "e8774199ef943447",
        "type": "httpInMultipart",
        "z": "728fd9e8064d0b16",
        "name": "OTA Upload",
        "url": "/esp8266-ota",
        "method": "post",
        "fields": "[{ \"name\": \"firmware\"}]",
        "swaggerDoc": "",
        "x": 79.7857437133789,
        "y": 812.4286108016968,
        "wires": [
            [
                "9c96172e21bdfaec"
            ]
        ]
    },
    {
        "id": "9f5a1aca3bf53e4a",
        "type": "ui_slider",
        "z": "728fd9e8064d0b16",
        "name": "",
        "label": "slider",
        "tooltip": "",
        "group": "9afd95194a94d402",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 1230,
        "y": 2660,
        "wires": [
            [
                "3cb04375afcbdaa0",
                "649455d789e87ac7"
            ]
        ]
    },
    {
        "id": "649455d789e87ac7",
        "type": "function",
        "z": "728fd9e8064d0b16",
        "name": "",
        "func": "var level=flow.get(\"ledlevel\")\nmsg.payload={\"level\":level}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 2660,
        "wires": [
            [
                "023fbff7d0eed9bd",
                "1f5a3a1ace7714da"
            ]
        ]
    },
    {
        "id": "4aa38321f923f96b",
        "type": "mqtt in",
        "z": "728fd9e8064d0b16",
        "name": "",
        "topic": "II12/ESP3098615/led/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "759329fc13f505d4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 200,
        "y": 1200,
        "wires": [
            [
                "9dd6856bc6feb533"
            ]
        ]
    },
    {
        "id": "6315b935086872da",
        "type": "comment",
        "z": "728fd9e8064d0b16",
        "name": "Control Intensidad LED",
        "info": "",
        "x": 1220,
        "y": 2580,
        "wires": []
    },
    {
        "id": "4d02bccee2ddf188",
        "type": "comment",
        "z": "728fd9e8064d0b16",
        "name": "Nivel de intensidad actual del LED",
        "info": "",
        "x": 220,
        "y": 1160,
        "wires": []
    },
    {
        "id": "5e73a53b29078209",
        "type": "mqtt in",
        "z": "728fd9e8064d0b16",
        "name": "",
        "topic": "II12/ESP3098615/datos",
        "qos": "2",
        "datatype": "auto",
        "broker": "759329fc13f505d4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 180,
        "y": 1800,
        "wires": [
            [
                "0e24e66b49471511",
                "680f3e3a7f649f8f"
            ]
        ]
    },
    {
        "id": "cffa7afaa35f7001",
        "type": "mqtt in",
        "z": "728fd9e8064d0b16",
        "name": "",
        "topic": "II12/ESP3098615/conexion",
        "qos": "2",
        "datatype": "auto",
        "broker": "759329fc13f505d4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 190,
        "y": 1360,
        "wires": [
            [
                "95b45859b055485d",
                "1c9f9cdbe3ed55c6"
            ]
        ]
    },
    {
        "id": "d38396fe8480bd33",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "Conexion",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 1280,
        "wires": []
    },
    {
        "id": "551efa33338f48b0",
        "type": "comment",
        "z": "728fd9e8064d0b16",
        "name": "Estado de conexión del dispositivo",
        "info": "",
        "x": 220,
        "y": 1320,
        "wires": []
    },
    {
        "id": "133df33fc154451b",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "RSSI",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.RSSI",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1900,
        "wires": [
            [
                "0f2fa887724536bc",
                "388c84de6b3f38f2"
            ]
        ]
    },
    {
        "id": "0f2fa887724536bc",
        "type": "ui_text",
        "z": "728fd9e8064d0b16",
        "group": "7a706c0c623ea921",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "RSSI actual",
        "format": "{{msg.payload}} dBm",
        "layout": "row-spread",
        "className": "",
        "x": 890,
        "y": 1900,
        "wires": []
    },
    {
        "id": "53ca11b53005f570",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "SSID",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.SSID",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 2000,
        "wires": [
            [
                "fc1e75c637edc311",
                "d36be7c607bf5a02"
            ]
        ]
    },
    {
        "id": "fc1e75c637edc311",
        "type": "ui_text",
        "z": "728fd9e8064d0b16",
        "group": "7a706c0c623ea921",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "SSID",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 2000,
        "wires": []
    },
    {
        "id": "5eb18f8a915a16aa",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "Local IP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Wifi.IP",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 2100,
        "wires": [
            [
                "46162729398429a7",
                "4e377fe213cdbd8f"
            ]
        ]
    },
    {
        "id": "46162729398429a7",
        "type": "ui_text",
        "z": "728fd9e8064d0b16",
        "group": "7a706c0c623ea921",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "localIP",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 2100,
        "wires": []
    },
    {
        "id": "db079948be64791c",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "temp",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.DHT11.Temperatura",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1600,
        "wires": [
            [
                "9ff14026bce82d4f",
                "12e612b82940f289"
            ]
        ]
    },
    {
        "id": "ca88154bd40be239",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "hum",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.DHT11.Humedad",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1700,
        "wires": [
            [
                "44b580fb0e6be169",
                "c871e3c6e536ecbb"
            ]
        ]
    },
    {
        "id": "ed6134a3ba9957a2",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "uptime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Uptime",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1800,
        "wires": [
            [
                "572fa24a5c27409f",
                "d2e86910c02acc09"
            ]
        ]
    },
    {
        "id": "c5de0ec6675f4b57",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "vcc",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.Vcc",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1500,
        "wires": [
            [
                "4077cbdfb1150332",
                "451051de9ae25c4f"
            ]
        ]
    },
    {
        "id": "4077cbdfb1150332",
        "type": "ui_text",
        "z": "728fd9e8064d0b16",
        "group": "16706cf61f3cf696",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "bateria",
        "format": "{{msg.payload}} mV",
        "layout": "row-spread",
        "className": "",
        "x": 880,
        "y": 1500,
        "wires": []
    },
    {
        "id": "44b580fb0e6be169",
        "type": "ui_gauge",
        "z": "728fd9e8064d0b16",
        "name": "",
        "group": "16706cf61f3cf696",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "humedad",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 880,
        "y": 1700,
        "wires": []
    },
    {
        "id": "9ff14026bce82d4f",
        "type": "ui_gauge",
        "z": "728fd9e8064d0b16",
        "name": "",
        "group": "16706cf61f3cf696",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "temperatura",
        "label": "ºC",
        "format": "{{value}}",
        "min": "-10",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 890,
        "y": 1600,
        "wires": []
    },
    {
        "id": "572fa24a5c27409f",
        "type": "ui_text",
        "z": "728fd9e8064d0b16",
        "group": "16706cf61f3cf696",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "uptime",
        "format": "{{msg.payload}} ms",
        "layout": "row-spread",
        "className": "",
        "x": 870,
        "y": 1800,
        "wires": []
    },
    {
        "id": "59977a4a4f221733",
        "type": "comment",
        "z": "728fd9e8064d0b16",
        "name": "Datos de los sensores",
        "info": "",
        "x": 180,
        "y": 1760,
        "wires": []
    },
    {
        "id": "8d5f757433314748",
        "type": "ui_text",
        "z": "728fd9e8064d0b16",
        "group": "9afd95194a94d402",
        "order": 2,
        "width": "6",
        "height": "7",
        "name": "",
        "label": "estado del led",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 880,
        "y": 1180,
        "wires": []
    },
    {
        "id": "0e24e66b49471511",
        "type": "json",
        "z": "728fd9e8064d0b16",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 390,
        "y": 1800,
        "wires": [
            [
                "c5de0ec6675f4b57",
                "db079948be64791c",
                "ca88154bd40be239",
                "ed6134a3ba9957a2",
                "133df33fc154451b",
                "53ca11b53005f570",
                "5eb18f8a915a16aa"
            ]
        ]
    },
    {
        "id": "023fbff7d0eed9bd",
        "type": "mqtt out",
        "z": "728fd9e8064d0b16",
        "name": "",
        "topic": "II12/ESP3098615/led/cmd",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "759329fc13f505d4",
        "x": 1870,
        "y": 2640,
        "wires": []
    },
    {
        "id": "5acc080e18b9c087",
        "type": "mqtt out",
        "z": "728fd9e8064d0b16",
        "name": "",
        "topic": "II12/ESP3098615/config",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "759329fc13f505d4",
        "x": 1150,
        "y": 2260,
        "wires": []
    },
    {
        "id": "466d423a2adfdfe6",
        "type": "ui_numeric",
        "z": "728fd9e8064d0b16",
        "name": "",
        "label": "actualiza",
        "tooltip": "",
        "group": "9afd95194a94d402",
        "order": 3,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "step": "10",
        "className": "",
        "x": 280,
        "y": 2320,
        "wires": [
            [
                "70ef92305729b62e"
            ]
        ]
    },
    {
        "id": "ddb87b9b9522dbe8",
        "type": "ui_numeric",
        "z": "728fd9e8064d0b16",
        "name": "",
        "label": "envia",
        "tooltip": "",
        "group": "9afd95194a94d402",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "500",
        "step": "25",
        "className": "",
        "x": 270,
        "y": 2260,
        "wires": [
            [
                "d19e6743819eaf92"
            ]
        ]
    },
    {
        "id": "8ce51a443cd7594b",
        "type": "ui_numeric",
        "z": "728fd9e8064d0b16",
        "name": "",
        "label": "velocidad",
        "tooltip": "",
        "group": "9afd95194a94d402",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "step": 1,
        "className": "",
        "x": 280,
        "y": 2380,
        "wires": [
            [
                "94ad2a34b3b16424"
            ]
        ]
    },
    {
        "id": "1594a258844ef5b1",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 2400,
        "wires": []
    },
    {
        "id": "f5e22ccd11ef20d0",
        "type": "function",
        "z": "728fd9e8064d0b16",
        "name": "",
        "func": "var envia=flow.get(\"envia\")\nvar actualiza=flow.get(\"actualiza\")\nvar velocidad=flow.get(\"velocidad\")\nvar led=flow.get(\"led\")\nvar switches=flow.get(\"switches\")\n//var enviado=flow.get(\"enviar\")\n//if (enviado==true){\n    msg.payload={\"envia\":envia,\"actualiza\":actualiza,\"velocidad\":velocidad,\"led\":led,\"switch\":switches}\n//}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2260,
        "wires": [
            [
                "1594a258844ef5b1",
                "5acc080e18b9c087"
            ]
        ]
    },
    {
        "id": "d19e6743819eaf92",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "envia",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 2260,
        "wires": [
            []
        ]
    },
    {
        "id": "70ef92305729b62e",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "actualiza",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "94ad2a34b3b16424",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "velocidad",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 2380,
        "wires": [
            []
        ]
    },
    {
        "id": "1c6de638e44d0248",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "led",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 2440,
        "wires": [
            [
                "76c0bf8be4d73ed7"
            ]
        ]
    },
    {
        "id": "5479bed5aeb3abd6",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "switches",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "bf955016cd1d8f89",
        "type": "inject",
        "z": "728fd9e8064d0b16",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "x": 770,
        "y": 2260,
        "wires": [
            [
                "f5e22ccd11ef20d0"
            ]
        ]
    },
    {
        "id": "1f5a3a1ace7714da",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1810,
        "y": 2740,
        "wires": []
    },
    {
        "id": "8a44d86b6b02b8bc",
        "type": "function",
        "z": "728fd9e8064d0b16",
        "name": "mensaje bienvenida y cambio intensidad",
        "func": "var valor=parseInt(msg.payload.content)\nif(valor>=0 && valor<=100)\n{\n msg.payload.content=\"Se ha cambiado la intensidad del led a \"+valor;\n msg.payload.intensidad=valor\n msg.payload.origin=\"Telegram\"\n}\nelse if(valor<0 || valor>100)\n{\n msg.payload.content=\"Se necesita un valor entre 0 y 100 para cambiar la intensidad del led\";\n msg.payload.intensidad=flow.get(\"ledlevel\");\n}\nelse if(msg.payload.content.substring(0,1)!=\"/\")\n{\n msg.payload.content=\"Hola \" +msg.originalMessage.from.first_name+  \", soy el bot del Grupo 12. Puedo responderte a estos comandos:\\n/start\\n/datos\\n/config\\n/led\\n/cambiarled\\n/switch\";\n msg.payload.intensidad=flow.get(\"ledlevel\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2640,
        "wires": [
            [
                "476bf64ff625471c",
                "570fe01e04ba5ee7",
                "e0de0af6e3aa2fdf"
            ]
        ]
    },
    {
        "id": "9e44697b09e38ba8",
        "type": "function",
        "z": "728fd9e8064d0b16",
        "name": "mensaje respuesta",
        "func": "var envia=flow.get(\"envia\").toString()\nvar actualiza=flow.get(\"actualiza\").toString()\nvar velocidad=flow.get(\"velocidad\").toString()\nvar led=flow.get(\"led\").toString()\nvar switches=flow.get(\"switches\").toString()\n//var enviado=flow.get(\"enviar\")\n//if (enviado==true){\n    msg.payload.content=\"Información: \\nenvia: \" +envia+\"\\nactualiza: \"+actualiza+\"\\nvelocidad: \"+velocidad+\"\\nled: \"+led+\"\\nswitch: \"+switches;\n//}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2700,
        "wires": [
            [
                "476bf64ff625471c"
            ]
        ]
    },
    {
        "id": "a25d4cdd1419ae29",
        "type": "mqtt in",
        "z": "728fd9e8064d0b16",
        "name": "",
        "topic": "II12/ESP3098615/switch/status",
        "qos": "2",
        "datatype": "auto",
        "broker": "759329fc13f505d4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 210,
        "y": 2160,
        "wires": [
            [
                "80ee791442c2834f"
            ]
        ]
    },
    {
        "id": "50481079ea763a87",
        "type": "mqtt in",
        "z": "728fd9e8064d0b16",
        "name": "",
        "topic": "II12/ESP3098615/FOTA",
        "qos": "2",
        "datatype": "auto",
        "broker": "759329fc13f505d4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "x": 120,
        "y": 400,
        "wires": [
            [
                "25ed2143b6ba88e6"
            ]
        ]
    },
    {
        "id": "451051de9ae25c4f",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "vcc",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "6b724474e69de52a",
        "type": "function",
        "z": "728fd9e8064d0b16",
        "name": "mensaje respuesta",
        "func": "var vcc=flow.get(\"vcc\")\nvar temp=flow.get(\"temp\")\nvar hum=flow.get(\"hum\")\nvar uptime=flow.get(\"uptime\")\nvar rssi=flow.get(\"rssi\")\nvar ssid=flow.get(\"ssid\")\nvar ip=flow.get(\"ip\")\n//var enviado=flow.get(\"enviar\")\n//if (enviado==true){\n   msg.payload.content=\"Datos: \\nVcc: \" +vcc+\"\\nTemperatura: \"+temp+\"\\nHumedad: \"+hum+\"\\nUptime: \"+uptime+\"\\nRSSI: \"+rssi+\"\\nSSID: \"+ssid+\"\\nLocal IP: \"+ip;\n//}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2760,
        "wires": [
            [
                "476bf64ff625471c"
            ]
        ]
    },
    {
        "id": "12e612b82940f289",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "temp",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "c871e3c6e536ecbb",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hum",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "d2e86910c02acc09",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "uptime",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "388c84de6b3f38f2",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rssi",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "d36be7c607bf5a02",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ssid",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "4e377fe213cdbd8f",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ip",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "36d47f053ef088e9",
        "type": "function",
        "z": "728fd9e8064d0b16",
        "name": "mensaje respuesta",
        "func": "var ledlevel=flow.get(\"ledlevel\")\n//if (enviado==true){\n    msg.payload.content=\"Nivel del led: \" +ledlevel;\n//}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2820,
        "wires": [
            [
                "476bf64ff625471c"
            ]
        ]
    },
    {
        "id": "7aea4b382c6b61dd",
        "type": "telegram receiver",
        "z": "728fd9e8064d0b16",
        "name": "",
        "bot": "b2cc055e98302147",
        "saveDataDir": "",
        "filterCommands": true,
        "x": 170,
        "y": 2620,
        "wires": [
            [
                "8a44d86b6b02b8bc"
            ],
            []
        ]
    },
    {
        "id": "00ad3a7d800e7923",
        "type": "telegram command",
        "z": "728fd9e8064d0b16",
        "name": "",
        "command": "/config",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "b2cc055e98302147",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 310,
        "y": 2700,
        "wires": [
            [
                "9e44697b09e38ba8"
            ],
            []
        ]
    },
    {
        "id": "d034abb1a802d3e7",
        "type": "telegram command",
        "z": "728fd9e8064d0b16",
        "name": "",
        "command": "/start",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "b2cc055e98302147",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 170,
        "y": 2680,
        "wires": [
            [
                "8a44d86b6b02b8bc"
            ],
            []
        ]
    },
    {
        "id": "1b6496f52e46111c",
        "type": "telegram command",
        "z": "728fd9e8064d0b16",
        "name": "",
        "command": "/datos",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "b2cc055e98302147",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 310,
        "y": 2760,
        "wires": [
            [
                "6b724474e69de52a"
            ],
            []
        ]
    },
    {
        "id": "f745a8db61c9a12e",
        "type": "telegram command",
        "z": "728fd9e8064d0b16",
        "name": "",
        "command": "/led",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "b2cc055e98302147",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 310,
        "y": 2820,
        "wires": [
            [
                "36d47f053ef088e9"
            ],
            []
        ]
    },
    {
        "id": "476bf64ff625471c",
        "type": "telegram sender",
        "z": "728fd9e8064d0b16",
        "name": "",
        "bot": "b2cc055e98302147",
        "haserroroutput": false,
        "outputs": 1,
        "x": 870,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "880a21197b3e6ec8",
        "type": "telegram command",
        "z": "728fd9e8064d0b16",
        "name": "",
        "command": "/cambiarled",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "b2cc055e98302147",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 310,
        "y": 2880,
        "wires": [
            [
                "d23faaaf7a501e92"
            ],
            []
        ]
    },
    {
        "id": "d23faaaf7a501e92",
        "type": "function",
        "z": "728fd9e8064d0b16",
        "name": "mensaje respuesta",
        "func": "msg.payload.content=\"Introduce intensidad del led entre 0 y 100 \" \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2880,
        "wires": [
            [
                "476bf64ff625471c"
            ]
        ]
    },
    {
        "id": "570fe01e04ba5ee7",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ledlevel",
                "pt": "flow",
                "to": "payload.intensidad",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "origen",
                "pt": "flow",
                "to": "payload.origin",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 2700,
        "wires": [
            [
                "649455d789e87ac7"
            ]
        ]
    },
    {
        "id": "e0de0af6e3aa2fdf",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 2620,
        "wires": []
    },
    {
        "id": "3225366751df55d2",
        "type": "telegram command",
        "z": "728fd9e8064d0b16",
        "name": "",
        "command": "/switch",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "b2cc055e98302147",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 290,
        "y": 2940,
        "wires": [
            [
                "be86fde3072fa6bb"
            ],
            []
        ]
    },
    {
        "id": "be86fde3072fa6bb",
        "type": "function",
        "z": "728fd9e8064d0b16",
        "name": "mensaje respuesta",
        "func": "if (flow.get(\"switches\")===true)\n{\n    msg.payload.content=\"Switch apagado\"\n    msg.payload.sw=false;\n}\nelse if (flow.get(\"switches\")===false)\n{\n    msg.payload.content=\"Switch encendido\"\n    msg.payload.sw=true;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 2940,
        "wires": [
            [
                "476bf64ff625471c",
                "0cb4150b132207ee",
                "f0516aef84571ce7"
            ]
        ]
    },
    {
        "id": "0cb4150b132207ee",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "switches",
                "pt": "flow",
                "to": "payload.sw",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 2920,
        "wires": [
            []
        ]
    },
    {
        "id": "542007da7a595f94",
        "type": "inject",
        "z": "728fd9e8064d0b16",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{ }",
        "payloadType": "json",
        "x": 90,
        "y": 2380,
        "wires": [
            [
                "ddb87b9b9522dbe8",
                "466d423a2adfdfe6",
                "8ce51a443cd7594b",
                "cd97a1de0466b3bd",
                "f5b6569684bb65fb"
            ]
        ]
    },
    {
        "id": "9ba185356ef114b6",
        "type": "inject",
        "z": "728fd9e8064d0b16",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 90,
        "y": 2500,
        "wires": [
            []
        ]
    },
    {
        "id": "f0516aef84571ce7",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 2980,
        "wires": []
    },
    {
        "id": "80ee791442c2834f",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 2160,
        "wires": []
    },
    {
        "id": "e9dcb41d1c4b757e",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 2540,
        "wires": []
    },
    {
        "id": "680f3e3a7f649f8f",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1940,
        "wires": []
    },
    {
        "id": "7cfa1c41aa0a0d23",
        "type": "mqtt out",
        "z": "728fd9e8064d0b16",
        "name": "",
        "topic": "II12/ESP3098615/switch/cmd",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "759329fc13f505d4",
        "x": 980,
        "y": 2460,
        "wires": []
    },
    {
        "id": "3cb04375afcbdaa0",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ledlevel",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "origen",
                "pt": "flow",
                "to": "mqtt",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "76c0bf8be4d73ed7",
        "type": "function",
        "z": "728fd9e8064d0b16",
        "name": "",
        "func": "var level=flow.get(\"led\")\nvar id=flow.get(\"ChipID\")\nmsg.payload={\"level\":level, \"id\":id}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 2460,
        "wires": [
            [
                "7cfa1c41aa0a0d23",
                "e9dcb41d1c4b757e"
            ]
        ]
    },
    {
        "id": "11246a7c418252ff",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1100,
        "wires": []
    },
    {
        "id": "9dd6856bc6feb533",
        "type": "json",
        "z": "728fd9e8064d0b16",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 410,
        "y": 1200,
        "wires": [
            [
                "b685f1bde95b22b9"
            ]
        ]
    },
    {
        "id": "b685f1bde95b22b9",
        "type": "function",
        "z": "728fd9e8064d0b16",
        "name": "",
        "func": "msg.payload.origen=flow.get(\"origen\")\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1180,
        "wires": [
            [
                "8d5f757433314748",
                "11246a7c418252ff"
            ]
        ]
    },
    {
        "id": "95b45859b055485d",
        "type": "json",
        "z": "728fd9e8064d0b16",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 510,
        "y": 1360,
        "wires": [
            [
                "d38396fe8480bd33",
                "40aa73dba06e5083"
            ]
        ]
    },
    {
        "id": "1c9f9cdbe3ed55c6",
        "type": "debug",
        "z": "728fd9e8064d0b16",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 1420,
        "wires": []
    },
    {
        "id": "40aa73dba06e5083",
        "type": "change",
        "z": "728fd9e8064d0b16",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ChipID",
                "pt": "flow",
                "to": "payload.CHIPID",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "cd97a1de0466b3bd",
        "type": "ui_numeric",
        "z": "728fd9e8064d0b16",
        "name": "",
        "label": "led",
        "tooltip": "",
        "group": "9afd95194a94d402",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "step": 1,
        "className": "",
        "x": 270,
        "y": 2440,
        "wires": [
            [
                "1c6de638e44d0248"
            ]
        ]
    },
    {
        "id": "f5b6569684bb65fb",
        "type": "ui_numeric",
        "z": "728fd9e8064d0b16",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "9afd95194a94d402",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": "1",
        "step": 1,
        "className": "",
        "x": 270,
        "y": 2500,
        "wires": [
            [
                "5479bed5aeb3abd6"
            ]
        ]
    },
    {
        "id": "9afd95194a94d402",
        "type": "ui_group",
        "name": "Configuración del LED",
        "tab": "bcfa091955a088ae",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "759329fc13f505d4",
        "type": "mqtt-broker",
        "name": "",
        "broker": "iot.ac.uma.es",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7a706c0c623ea921",
        "type": "ui_group",
        "name": "Estado de conexión",
        "tab": "bcfa091955a088ae",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "16706cf61f3cf696",
        "type": "ui_group",
        "name": "Medida de los sensores",
        "tab": "bcfa091955a088ae",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b2cc055e98302147",
        "type": "telegram bot",
        "botname": "ProyectoGrupo12_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "bcfa091955a088ae",
        "type": "ui_tab",
        "name": "Tarea 6. Tarea Grupal ESP8266",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    }
]